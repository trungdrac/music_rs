{"version":3,"sources":["constants/ActionTypes.js","actions/songAction.js","actions/playerAction.js","helpers/toast.js","actions/playlistAction.js","helpers/convertTime.js","helpers/handleKeyboardEvent.js","helpers/debounce.js","actions/searchAction.js","components/general/OptionsList.js","components/song/SongCard.js","components/artist/ArtistDetail.js","actions/artistAction.js","components/general/MyPagination.js","components/artist/ArtistCard.js","components/general/Blank.js","components/artist/ListArtist.js","components/artist/Artists.js","components/general/RightSidebar.js","components/general/Player.js","components/general/Loading.js","components/song/ListSongInline.js","components/song/Chart.js","components/user/Recommendation.js","components/home/Home.js","actions/userAction.js","components/layout/Sidebar.js","helpers/validator.js","components/layout/Header.js","components/playlist/PlaylistDetail.js","components/playlist/PlaylistCard.js","components/playlist/ListPlayList.js","components/playlist/Playlists.js","components/song/SongDetail.js","components/song/ListSong.js","components/song/Songs.js","components/user/Login.js","components/user/Register.js","components/user/ForgotPassword.js","components/user/ResetPassword.js","components/search/SearchSong.js","components/search/SearchPlaylist.js","components/search/SearchArtist.js","components/search/SearchResult.js","components/user/LikedSong.js","components/user/MyPlaylist.js","components/user/History.js","App.js","helpers/cronjob.js","actions/areaAction.js","reportWebVitals.js","reducers/playerReducer.js","reducers/playlistReducer.js","reducers/songReducer.js","reducers/areaReducer.js","reducers/userReducer.js","reducers/artistReducer.js","reducers/searchReducer.js","reducers/index.js","store.js","helpers/useLocalStorage.js","index.js","constants/Config.js"],"names":["SET_CURRENT_USER","SET_CURRENT_SONG_ID","PLAY_AUDIO","PAUSE_AUDIO","SET_CURRENT_TIME","SET_PROGRESS_PERCENT","SET_CURRENT_INDEX","SET_DURATION","SET_REPEAT","TOGGLE_RANDOM","SET_VOLUME","SET_LIST_PLAYING","SET_SONGS","SET_SONG_DETAIL","SET_AREAS","SET_SONG_CATEGORY","SET_PLAYLIST_AREA","SET_MY_PLAYLIST","SET_PLAYLIST_DETAIL","SET_ARTIST_AREA","SET_ARTIST_DETAIL","SET_SEARCH_SUGGEST","SET_FILTER_RESULT","SET_SEARCH_RESULT","SET_LIKED_SONG_COUNT","SET_MY_PLAYLIST_COUNT","SET_HISTORY_LISTEN","SET_RECOMMENDATION","SET_CHART","setLikedSongCount","count","type","types","setRecommendation","songs","playAudio","setCurrentIndex","newIndex","toggleRandom","setListPlaying","listPlaying","toast","title","message","duration","main","document","getElementById","createElement","autoRemoveId","setTimeout","removeChild","onclick","e","target","closest","clearTimeout","delay","toFixed","classList","add","style","animation","innerHTML","appendChild","setMyPlaylist","playlists","setMyPlaylistCount","msToISO","time","Date","toISOString","substr","convertTZ","timeZone","toLocaleString","handleKeyboardEvent","audio","keyCode","preventDefault","paused","play","pause","currentTime","volume","debounce","func","timer","timeout","args","apply","setResult","result","OptionsList","props","getLike","song","songId","_id","user","userToken","axios","get","userId","headers","Authorization","then","res","setState","like","data","catch","error","response","likedSongCount","state","getPlaylist","listPlaylist","showPlaylistModal","addToPlaylist","playlistId","success","createPlaylist","name","value","post","myPlaylistCount","playNext","currentIndex","indexExisted","findIndex","item","newList","splice","playLast","length","remove","songIndex","getInfo","history","push","playlist","copyLink","navigator","permissions","query","clipboard","writeText","window","location","host","download","link","url","open","deleteMyPlaylist","filter","setFilterResult","selectSong","id","dataset","editPlaylist","form","editFormRef","current","songIds","i","checked","showEditModal","showDeleteModal","React","createRef","this","prevProps","currentSongId","filterResult","className","Dropdown","ItemText","onClick","icon","faHeart","Item","faPlus","faStepForward","faClipboardList","faTrashAlt","pathname","editMyPlaylist","faEdit","info","faInfoCircle","faLink","faDownload","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Body","map","updatedAt","faChevronRight","onSubmit","method","placeholder","onFocus","removeEventListener","onBlur","addEventListener","onChange","Fragment","onMouseDown","data-id","backgroundImage","image","ref","Form","Check","label","defaultChecked","Title","Footer","Button","variant","Component","OptionsListWithRouter","withRouter","connect","player","search","dispatch","SongCard","to","src","alt","DropdownButton","drop","faEllipsisV","faPlay","artist","index","ArtistDetail","artistDetail","isRandom","isLoading","artistId","match","params","setArtistDetail","area","MyPagination","handlePrev","active","handleNext","selectPage","innerText","items","URLSearchParams","Number","pageNums","Pagination","activeLabel","Prev","disabled","Ellipsis","Next","ArtistCard","Blank","faBan","ListArtist","areaId","Promise","all","results","artistArea","setArtistArea","Math","ceil","NUMBER_OF_ITEM_PER_PAGE","artists","Artists","areas","path","Tabs","activeKey","onSelect","nextTab","replace","Tab","eventKey","RightSidebar","pickSong","songNode","songOption","querySelector","scrollIntoView","behavior","block","data-index","faEllipsisH","actions","Player","handleTogglePlay","audioRef","isPlaying","handlePlay","timeCounter","setInterval","listenTime","handlePause","clearInterval","pauseAudio","handleTimeUpdate","newPercent","setCurrentTime","setProgressPercent","handleProgress","progress","progressRef","seekTime","handleLoadedData","historyListen","setDuration","setCurrentSongId","newHistory","pop","unshift","setHistoryListen","repeat","handleRandom","originalListPlaying","prevIndex","originIndex","listPlayingShuffle","currentSong","sort","random","handleVolume","newVolume","valueAsNumber","setVolume","handleVolumeBtn","prevVolume","handleEnded","wrapperRef","rightSidebarRef","contains","prevState","oldListId","addedSong","includes","concat","newListId","removedSong","removedSongIndex","console","log","progressPercent","setRepeat","faRedo","faStepBackward","faPause","faRandom","onLoadedData","onPlay","onPause","onTimeUpdate","onEnded","onVolumeChange","step","min","max","faVolumeMute","faVolumeUp","hidden","htmlFor","faMusic","playerActions","newTime","newDuration","Loading","ListSongInline","songTitle","songArtist","ListGroup","faHeadphonesAlt","chartcount","Chart","handleSelect","tab","playAll","chart","defaultActiveKey","Recommendation","recommendation","Home","setCurrentUser","Sidebar","slideOff","arrow","arrowRef","offsetParent","click","areaParam","faArrowAltCircleLeft","exact","activeClassName","faHome","slug","category","isActive","faMicrophone","faHandPointRight","faListAlt","faHistory","prevPath","SidebarWithRouter","Validator","options","getParent","element","selector","parentElement","matches","selectorRules","formElement","onsubmit","isFormValid","rules","forEach","rule","inputElement","validate","enableInputs","querySelectorAll","formValues","Array","from","reduce","values","input","isArray","files","submit","test","inputElements","onblur","oninput","formGroupSelector","errorSelector","errorMessage","errorElement","isRequired","undefined","isEmail","minLength","trim","isConfirmed","getConfirmValue","checkExisted","field","usernameMessage","emailMessage","suggest","suggestion","setSuggestion","searchRef","blur","onEnter","key","logout","showLogoutModal","showProfileModal","passwordMessage","update","errorData","faBars","faSearch","onKeyPress","data-type","faUserCircle","username","faUser","faSignOutAlt","action","autoFocus","defaultValue","onInput","email","autoComplete","scope","HeaderWithRouter","PlaylistDetail","playPlaylist","playlistDetail","setPlaylistDetail","own","faCaretSquareDown","songDetail","PlaylistCard","ListPlaylist","playlistArea","setPlaylistArea","Playlists","SongDetail","collapse","showMore","collapseRef","toggle","setSongDetail","lyrics","playing","dangerouslySetInnerHTML","__html","ListSong","categoryId","songCategory","setSongCategory","Login","nextPath","Register","password_confirmation","ForgotPassword","isSended","ResetPassword","isSuccessed","resettoken","token","SearchSong","searchSong","SearchPlaylist","searchPlaylist","SearchArtist","searchArtist","SearchTabs","LikedSong","getLikedSong","likedSong","MyPlaylist","getMyPlaylist","myPlaylist","showCreatePlaylist","faPlusCircle","History","PrivateRoute","component","rest","render","App","getRecommendation","setAreas","setChart","execTime","intervalTime","job","getTime","cronjob","setMinutes","SearchResult","Songs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","persistedState","localStorage","getItem","LOCAL_STORAGE_KEY","JSON","parse","err","loadState","middleware","thunk","devTools","store","createStore","rootReducer","compose","applyMiddleware","subscribe","stringify","setItem","saveState","getState","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.9870909e.chunk.js","sourcesContent":["export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nexport const SET_CURRENT_SONG_ID = \"SET_CURRENT_SONG_ID\";\n\nexport const PLAY_AUDIO = \"PLAY_AUDIO\";\n\nexport const PAUSE_AUDIO = \"PAUSE_AUDIO\";\n\nexport const SET_CURRENT_TIME = \"SET_CURRENT_TIME\";\n\nexport const SET_PROGRESS_PERCENT = \"SET_PROGRESS_PERCENT\";\n\nexport const SET_CURRENT_INDEX = \"SET_CURRENT_INDEX\";\n\nexport const SET_DURATION = \"SET_DURATION\";\n\nexport const SET_REPEAT = \"SET_REPEAT\";\n\nexport const TOGGLE_RANDOM = \"TOGGLE_RANDOM\";\n\nexport const SET_VOLUME = \"SET_VOLUME\";\n\nexport const SET_LIST_PLAYING = \"SET_LIST_PLAYING\";\n\nexport const SET_SONGS = \"SET_SONGS\";\n\nexport const SET_SONG_DETAIL = \"SET_SONG_DETAIL\";\n\nexport const SET_AREAS = \"SET_AREAS\";\n\nexport const SET_SONG_CATEGORY = \"SET_SONG_CATEGORY\";\n\nexport const SET_PLAYLIST_AREA = \"SET_PLAYLIST_AREA\";\n\nexport const SET_MY_PLAYLIST = \"SET_MY_PLAYLIST\";\n\nexport const SET_PLAYLIST_DETAIL = \"SET_PLAYLIST_DETAIL\";\n\nexport const SET_ARTIST_AREA = \"SET_ARTIST_AREA\";\n\nexport const SET_ARTIST_DETAIL = \"SET_ARTIST_DETAIL\";\n\nexport const SET_SEARCH_SUGGEST = \"SET_SEARCH_SUGGEST\";\n\nexport const SET_FILTER_RESULT = \"SET_FILTER_RESULT\";\n\nexport const SET_SEARCH_RESULT = \"SET_SEARCH_RESULT\";\n\nexport const SET_LIKED_SONG_COUNT = \"SET_LIKED_SONG_COUNT\";\n\nexport const SET_MY_PLAYLIST_COUNT = \"SET_MY_PLAYLIST_COUNT\";\n\nexport const SET_HISTORY_LISTEN = \"SET_HISTORY_LISTEN\";\n\nexport const SET_RECOMMENDATION = \"SET_RECOMMENDATION\";\n\nexport const SET_CHART = \"SET_CHART\";\n","import * as types from \"../constants/ActionTypes\";\n\nexport const setSongs = (songs) => {\n  return {\n    type: types.SET_SONGS,\n    songs,\n  };\n};\n\nexport const setSongDetail = (song) => {\n  return {\n    type: types.SET_SONG_DETAIL,\n    song,\n  };\n};\n\nexport const setSongCategory = (songs) => {\n  return {\n    type: types.SET_SONG_CATEGORY,\n    songs,\n  };\n};\n\nexport const setLikedSongCount = (count) => {\n  return {\n    type: types.SET_LIKED_SONG_COUNT,\n    count,\n  };\n};\n\nexport const setHistoryListen = (songs) => {\n  return {\n    type: types.SET_HISTORY_LISTEN,\n    songs,\n  };\n};\n\nexport const setRecommendation = (songs) => {\n  return {\n    type: types.SET_RECOMMENDATION,\n    songs,\n  };\n};\n\nexport const setChart = (songs) => {\n  return {\n    type: types.SET_CHART,\n    songs,\n  };\n};\n","import * as types from \"../constants/ActionTypes\";\n\nexport const playAudio = () => {\n  return {\n    type: types.PLAY_AUDIO,\n  };\n};\n\nexport const pauseAudio = () => {\n  return {\n    type: types.PAUSE_AUDIO,\n  };\n};\n\nexport const setCurrentSongId = (currentSongId) => {\n  return {\n    type: types.SET_CURRENT_SONG_ID,\n    currentSongId,\n  };\n};\n\nexport const setCurrentTime = (newTime) => {\n  return {\n    type: types.SET_CURRENT_TIME,\n    newTime,\n  };\n};\n\nexport const setProgressPercent = (newPercent) => {\n  return {\n    type: types.SET_PROGRESS_PERCENT,\n    newPercent,\n  };\n};\n\nexport const setCurrentIndex = (newIndex) => {\n  return {\n    type: types.SET_CURRENT_INDEX,\n    newIndex,\n  };\n};\n\nexport const setDuration = (newDuration) => {\n  return {\n    type: types.SET_DURATION,\n    newDuration,\n  };\n};\n\nexport const setRepeat = (value) => {\n  return {\n    type: types.SET_REPEAT,\n    value,\n  };\n};\n\nexport const toggleRandom = () => {\n  return {\n    type: types.TOGGLE_RANDOM,\n  };\n};\n\nexport const setVolume = (newVolume) => {\n  return {\n    type: types.SET_VOLUME,\n    newVolume,\n  };\n};\n\nexport const setListPlaying = (listPlaying) => {\n  return {\n    type: types.SET_LIST_PLAYING,\n    listPlaying,\n  };\n};\n","export default function toast({\n  title = \"\",\n  message = \"\",\n  type = \"info\",\n  duration = 3000,\n}) {\n  const main = document.getElementById(\"my-toast\");\n  if (main) {\n    const toast = document.createElement(\"div\");\n\n    // Auto remove toast\n    const autoRemoveId = setTimeout(() => {\n      main.removeChild(toast);\n    }, duration + 1000); // 1000: fadeOut time\n\n    // Remove toast when clicked\n    toast.onclick = (e) => {\n      if (e.target.closest(\".toast__close\")) {\n        main.removeChild(toast);\n        clearTimeout(autoRemoveId);\n      }\n    };\n\n    const delay = (duration / 1000).toFixed(2);\n\n    toast.classList.add(\"my-toast\", `toast--${type}`);\n    toast.style.animation = `slideInLeft ease .3s, fadeOut linear 1s ${delay}s forwards`;\n\n    toast.innerHTML = `\n                      <div class=\"toast__content\">\n                          <h3 class=\"toast__title\">${title}</h3>\n                          <p class=\"toast__msg\">${message}</p>\n                      </div>\n                      <span class=\"toast__close\">&times;</span>\n                  `;\n    main.appendChild(toast);\n  }\n}\n","import * as types from \"../constants/ActionTypes\";\n\nexport const setPlaylistArea = (playlists) => {\n  return {\n    type: types.SET_PLAYLIST_AREA,\n    playlists,\n  };\n};\n\nexport const setMyPlaylist = (playlists) => {\n  return {\n    type: types.SET_MY_PLAYLIST,\n    playlists,\n  };\n};\n\nexport const setMyPlaylistCount = (count) => {\n  return {\n    type: types.SET_MY_PLAYLIST_COUNT,\n    count,\n  };\n};\n\nexport const setPlaylistDetail = (playlist) => {\n  return {\n    type: types.SET_PLAYLIST_DETAIL,\n    playlist,\n  };\n};\n","export const msToISO = (time) => {\n  const timeISO = new Date(time * 1000).toISOString().substr(14, 5);\n  return timeISO;\n};\n\nexport const convertTZ = (time, timeZone = \"Asia/Jakarta\") => {\n  return new Date(time).toLocaleString(\"vi-VN\", { timeZone });\n};\n","export default function handleKeyboardEvent(e) {\n  const audio = document.getElementById(\"player-audio\");\n  if (audio) {\n    switch (e.keyCode) {\n      case 32:\n        e.preventDefault();\n        if (audio.paused) {\n          audio.play();\n        } else {\n          audio.pause();\n        }\n        break;\n      case 37:\n        audio.currentTime -= 5;\n        break;\n      case 39:\n        audio.currentTime += 5;\n        break;\n      case 38:\n        e.preventDefault();\n        if (audio.volume <= 0.9) audio.volume += 0.1;\n        else audio.volume = 1;\n        break;\n      case 40:\n        e.preventDefault();\n        if (audio.volume >= 0.1) audio.volume -= 0.1;\n        else audio.volume = 0;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export default function debounce(func, timeout = 300) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n","import * as types from \"../constants/ActionTypes\";\n\nexport const setSuggestion = (suggestion) => {\n  return {\n    type: types.SET_SEARCH_SUGGEST,\n    suggestion,\n  };\n};\n\nexport const setResult = (result) => {\n  return {\n    type: types.SET_SEARCH_RESULT,\n    result,\n  };\n};\n\nexport const setFilterResult = (result) => {\n  return {\n    type: types.SET_FILTER_RESULT,\n    result,\n  };\n};\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { setListPlaying, setCurrentIndex } from \"../../actions/playerAction\";\nimport { setLikedSongCount } from \"../../actions/songAction\";\nimport { setMyPlaylistCount } from \"../../actions/playlistAction\";\nimport { Button, Dropdown, Form, Modal } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faDownload,\n  faHeart,\n  faInfoCircle,\n  faLink,\n  faClipboardList,\n  faPlus,\n  faStepForward,\n  faTrashAlt,\n  faChevronRight,\n  faEdit,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport toast from \"../../helpers/toast\";\nimport { convertTZ } from \"../../helpers/convertTime\";\nimport handleKeyboardEvent from \"../../helpers/handleKeyboardEvent\";\nimport debounce from \"../../helpers/debounce\";\nimport { setFilterResult } from \"../../actions/searchAction\";\n\nclass OptionsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      like: false,\n      showPlaylistModal: false,\n      showEditModal: false,\n      showDeleteModal: false,\n      listPlaylist: [],\n      songs: [],\n    };\n    this.editFormRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.getLike();\n    if (this.props.playlist) this.setState({ songs: this.props.playlist.song });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.likedSongCount !== this.props.likedSongCount ||\n      prevProps.currentSongId !== this.props.currentSongId\n    )\n      this.getLike();\n  }\n\n  getLike = () => {\n    if (this.props.song) {\n      const songId = this.props.song._id;\n      const { user } = this.props;\n      if (user.userToken) {\n        axios\n          .get(`/interaction/detail?user=${user.userId}&song=${songId}`, {\n            headers: {\n              Authorization: `Bearer ${user.userToken}`,\n            },\n          })\n          .then((res) => this.setState({ like: res.data }))\n          .catch((error) =>\n            toast({\n              title: \"Thất bại!\",\n              message: `${\n                error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n              }`,\n              type: \"error\",\n            })\n          );\n      }\n    }\n  };\n\n  like = () => {\n    const songId = this.props.song._id;\n    const { user } = this.props;\n    const { likedSongCount } = this.props;\n    axios\n      .get(`/interaction/like?user=${user.userId}&song=${songId}`, {\n        headers: {\n          Authorization: `Bearer ${user.userToken}`,\n        },\n      })\n      .then((res) => this.setState({ like: res.data }))\n      .then(() => {\n        if (this.state.like === true)\n          this.props.setLikedSongCount(likedSongCount + 1);\n        else this.props.setLikedSongCount(likedSongCount - 1);\n      })\n      .then(() =>\n        toast({\n          title: \"Thành công!\",\n          message: `Đã ${\n            this.state.like ? \"thêm vào\" : \"xóa khỏi\"\n          } bài hát yêu thích!`,\n          type: \"success\",\n        })\n      )\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  getPlaylist = () => {\n    const { user } = this.props;\n    axios\n      .get(`/user/${user.userId}/my-playlist/all`, {\n        headers: {\n          Authorization: `Bearer ${user.userToken}`,\n        },\n      })\n      .then((res) => this.setState({ listPlaylist: res.data }))\n      .then(() => this.setState({ showPlaylistModal: true }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  addToPlaylist = (playlistId) => {\n    const songId = this.props.song._id;\n    const { user } = this.props;\n    axios\n      .get(`/user/my-playlist/${playlistId}/add/${songId}`, {\n        headers: {\n          Authorization: `Bearer ${user.userToken}`,\n        },\n      })\n      .then((res) => {\n        if (res.data.success) {\n          toast({\n            title: \"Thành công!\",\n            message: res.data.success,\n            type: \"success\",\n          });\n          this.getPlaylist();\n        }\n        if (res.data.error)\n          toast({\n            title: \"Thất bại!\",\n            message: res.data.error,\n            type: \"error\",\n          });\n      })\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  createPlaylist = (e) => {\n    e.preventDefault();\n    const { user } = this.props;\n    const data = { [e.target[0].name]: e.target[0].value };\n    if (data.title === \"\")\n      toast({\n        title: \"Thất bại!\",\n        message: \"Tên playlist không được rỗng!\",\n        type: \"error\",\n      });\n    else {\n      axios\n        .post(`/user/${user.userId}/my-playlist/create`, data, {\n          headers: {\n            Authorization: `Bearer ${user.userToken}`,\n          },\n        })\n        .then((res) => {\n          if (res.data.success) {\n            toast({\n              title: \"Thành công!\",\n              message: res.data.success,\n              type: \"success\",\n            });\n            e.target[0].value = \"\";\n            this.getPlaylist();\n            this.props.setMyPlaylistCount(this.props.myPlaylistCount + 1);\n          }\n          if (res.data.error)\n            toast({\n              title: \"Thất bại!\",\n              message: res.data.error,\n              type: \"error\",\n            });\n        })\n        .catch((error) =>\n          toast({\n            title: \"Thất bại!\",\n            message: `${\n              error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n            }`,\n            type: \"error\",\n          })\n        );\n    }\n  };\n\n  playNext = () => {\n    const { currentIndex, listPlaying, song } = this.props;\n    const indexExisted = listPlaying.findIndex((item) => item._id === song._id);\n    const newList = [...listPlaying];\n\n    if (indexExisted !== -1) {\n      if (indexExisted < currentIndex) {\n        this.props.setCurrentIndex(currentIndex - 1);\n        newList.splice(indexExisted, 1);\n        newList.splice(currentIndex, 0, song);\n      } else {\n        newList.splice(indexExisted, 1);\n        newList.splice(currentIndex + 1, 0, song);\n      }\n    } else {\n      newList.splice(currentIndex + 1, 0, song);\n    }\n    this.props.setListPlaying(newList);\n    toast({\n      title: \"Thành công!\",\n      message: \"Bài hát sẽ được phát tiếp theo!\",\n      type: \"success\",\n    });\n  };\n\n  playLast = () => {\n    const { currentIndex, listPlaying, song } = this.props;\n    const indexExisted = listPlaying.findIndex((item) => item._id === song._id);\n    const newList = [...listPlaying];\n\n    if (indexExisted !== -1) {\n      if (indexExisted < currentIndex)\n        this.props.setCurrentIndex(currentIndex - 1);\n      newList.splice(indexExisted, 1);\n    }\n    newList.splice(newList.length, 0, song);\n    this.props.setListPlaying(newList);\n    toast({\n      title: \"Thành công!\",\n      message: \"Đã thêm vào danh sách chờ phát!\",\n      type: \"success\",\n    });\n  };\n\n  // comment = () => {};\n\n  remove = () => {\n    const { currentIndex, listPlaying, song } = this.props;\n    const newList = [...listPlaying];\n    const songIndex = newList.findIndex((item) => item._id === song._id);\n    if (songIndex < currentIndex) this.props.setCurrentIndex(currentIndex - 1);\n    newList.splice(songIndex, 1);\n    this.props.setListPlaying(newList);\n    toast({\n      title: \"Thành công!\",\n      message: \"Đã xóa khỏi chờ phát!\",\n      type: \"success\",\n    });\n  };\n\n  getInfo = () => {\n    if (this.props.song)\n      this.props.history.push(`/song/detail/${this.props.song._id}`);\n    if (this.props.playlist)\n      this.props.history.push(`/playlist/detail/${this.props.playlist._id}`);\n  };\n\n  copyLink = () => {\n    navigator.permissions.query({ name: \"clipboard-write\" }).then((result) => {\n      if (result.state === \"granted\" || result.state === \"prompt\") {\n        navigator.clipboard\n          .writeText(\n            `${window.location.host}/song/detail/${this.props.song._id}`\n          )\n          .then(\n            () =>\n              toast({\n                title: \"Thành công!\",\n                message: \"Đã copy link vào clipboard!\",\n                type: \"success\",\n              }),\n            () =>\n              toast({\n                title: \"Thất bại!\",\n                message: \"Link chưa được copy!\",\n                type: \"error\",\n              })\n          );\n      }\n    });\n  };\n\n  download = () => {\n    const { user, song } = this.props;\n    const data = { link: song.url };\n    axios\n      .post(`/user/download`, data, {\n        headers: {\n          Authorization: `Bearer ${user.userToken}`,\n        },\n      })\n      .then((res) => window.open(res.data))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  deleteMyPlaylist = () => {\n    if (this.props.playlist) {\n      const { playlist, user, myPlaylistCount } = this.props;\n      axios\n        .get(`/user/my-playlist/delete/${playlist._id}`, {\n          headers: {\n            Authorization: `Bearer ${user.userToken}`,\n          },\n        })\n        .then((res) => {\n          toast({\n            title: \"Thành công!\",\n            message: res.data.success,\n            type: \"success\",\n          });\n          this.props.setMyPlaylistCount(myPlaylistCount - 1);\n        })\n        .catch((error) =>\n          toast({\n            title: \"Thất bại!\",\n            message: `${\n              error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n            }`,\n            type: \"error\",\n          })\n        );\n    }\n  };\n\n  filter = debounce((e) => {\n    axios\n      .get(`/search?q=${e.target.value}`)\n      .then((res) => this.props.setFilterResult(res.data[0]))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }, 500);\n\n  selectSong = (e) => {\n    const selectedNode = e.target.closest(\".list-song__item.list-group-item\");\n    const { id } = selectedNode.dataset;\n    let songs = [...this.state.songs];\n    const indexExisted = songs.findIndex((item) => item._id === id);\n\n    if (indexExisted === -1) {\n      axios\n        .get(`/song/detail/${id}`)\n        .then((res) => songs.push(res.data))\n        .then(() => this.setState({ songs }))\n        .catch((error) =>\n          toast({\n            title: \"Thất bại!\",\n            message: `${\n              error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n            }`,\n            type: \"error\",\n          })\n        );\n    }\n  };\n\n  editPlaylist = () => {\n    if (this.props.playlist) {\n      const form = this.editFormRef.current;\n      let songIds = [];\n      for (let i = 0; i < form.length; i++) {\n        if (form[i].checked) songIds.push(form[i].id);\n      }\n      const { user, playlist } = this.props;\n      axios\n        .post(\n          `/user/my-playlist/update/${playlist._id}`,\n          { songIds },\n          {\n            headers: {\n              Authorization: `Bearer ${user.userToken}`,\n            },\n          }\n        )\n        .then((res) => this.setState({ songs: res.data.song }))\n        .then(() => {\n          toast({\n            title: \"Thành công!\",\n            message: \"Đã cập nhật playlist!\",\n            type: \"success\",\n          });\n          this.setState({ showEditModal: false });\n        })\n        .catch((error) =>\n          toast({\n            title: \"Thất bại!\",\n            message: `${\n              error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n            }`,\n            type: \"error\",\n          })\n        );\n    }\n  };\n\n  render() {\n    const { userId } = this.props.user;\n    const { like, listPlaylist } = this.state;\n    const { filterResult } = this.props;\n\n    return (\n      <div className=\"options-list\">\n        {this.props.like ? (\n          <Dropdown.ItemText className=\"options-list__item\" onClick={this.like}>\n            <div\n              className={`option-list__item--icon ${\n                userId && like === true ? \"active\" : \"\"\n              }`}\n            >\n              <FontAwesomeIcon icon={faHeart} />\n            </div>\n            <span>Yêu thích</span>\n          </Dropdown.ItemText>\n        ) : (\n          \"\"\n        )}\n        {this.props.addToPlaylist ? (\n          <Dropdown.Item\n            className=\"options-list__item\"\n            onClick={this.getPlaylist}\n          >\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faPlus} />\n            </div>\n            <span>Thêm vào playlist</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )}\n        {this.props.playNext ? (\n          <Dropdown.Item className=\"options-list__item\" onClick={this.playNext}>\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faStepForward} />\n            </div>\n            <span>Phát tiếp theo</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )}\n        {this.props.playLast ? (\n          <Dropdown.Item className=\"options-list__item\" onClick={this.playLast}>\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faClipboardList} />\n            </div>\n            <span>Thêm vào chờ phát</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )}\n        {this.props.remove ? (\n          <Dropdown.Item className=\"options-list__item\" onClick={this.remove}>\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faTrashAlt} />\n            </div>\n            <span>Xóa</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )}\n        {/* {this.props.comment ? (\n          <Dropdown.Item className=\"options-list__item\" onClick={this.comment}>\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faCommentDots} />\n            </div>\n            <span>Bình luận</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )} */}\n        {this.props.location.pathname === \"/user/my-playlist\" &&\n        this.props.editMyPlaylist ? (\n          <Dropdown.Item\n            className=\"options-list__item\"\n            onClick={() => this.setState({ showEditModal: true })}\n          >\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faEdit} />\n            </div>\n            <span>Chỉnh sửa</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )}\n        {this.props.location.pathname === \"/user/my-playlist\" &&\n        this.props.deleteMyPlaylist ? (\n          <Dropdown.Item\n            className=\"options-list__item\"\n            onClick={() => this.setState({ showDeleteModal: true })}\n          >\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faTrashAlt} />\n            </div>\n            <span>Xóa playlist</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )}\n        {this.props.info ? (\n          <Dropdown.Item className=\"options-list__item\" onClick={this.getInfo}>\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faInfoCircle} />\n            </div>\n            <span>Chi tiết</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )}\n        {this.props.copyLink ? (\n          <Dropdown.ItemText\n            className=\"options-list__item\"\n            onClick={this.copyLink}\n          >\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faLink} />\n            </div>\n            <span>Sao chép link</span>\n          </Dropdown.ItemText>\n        ) : (\n          \"\"\n        )}\n        {this.props.download ? (\n          <Dropdown.Item className=\"options-list__item\" onClick={this.download}>\n            <div className=\"option-list__item--icon\">\n              <FontAwesomeIcon icon={faDownload} />\n            </div>\n            <span>Tải xuống</span>\n          </Dropdown.Item>\n        ) : (\n          \"\"\n        )}\n\n        {/* Playlist modal */}\n        <Modal\n          show={this.state.showPlaylistModal}\n          onHide={() => this.setState({ showPlaylistModal: false })}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton className=\"bg-light\">\n            <h5 className=\"mb-0\">Chọn playlist muốn thêm!</h5>\n          </Modal.Header>\n          <Modal.Body className=\"playlist-modal-body bg-light\">\n            <div className=\"list-playlist-modal\">\n              <ul className=\"list-group list-group-flush\">\n                {listPlaylist.length === 0 ? (\n                  <span className=\"text-center font-weight-light mt-5\">\n                    <i>Bạn chưa có playlist nào!</i>\n                  </span>\n                ) : (\n                  listPlaylist.map((playlist) => (\n                    <li\n                      key={playlist._id}\n                      className=\"list-playlist-item list-group-item\"\n                      onClick={() => this.addToPlaylist(playlist._id)}\n                    >\n                      <div className=\"d-flex justify-content-between align-items-center\">\n                        <div>\n                          <h6>{`${playlist.title} (${playlist.song.length})`}</h6>\n                          <span>{`Cập nhật: ${convertTZ(\n                            playlist.updatedAt\n                          )}`}</span>\n                        </div>\n                        <FontAwesomeIcon icon={faChevronRight} />\n                      </div>\n                    </li>\n                  ))\n                )}\n              </ul>\n            </div>\n            <form\n              onSubmit={this.createPlaylist}\n              method=\"POST\"\n              id=\"create-playlist-form\"\n            >\n              <div className=\"d-flex\">\n                <div className=\"flex-grow-1\">\n                  <input\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Nhập tên playlist cần tạo!\"\n                    className=\"h-100 w-100 bg-light form-control\"\n                    onFocus={() =>\n                      window.removeEventListener(\"keydown\", handleKeyboardEvent)\n                    }\n                    onBlur={() =>\n                      window.addEventListener(\"keydown\", handleKeyboardEvent)\n                    }\n                  />\n                </div>\n                <button className=\"btn btn-info ml-2\">Tạo playlist</button>\n              </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n\n        {/* Edit my playlist modal */}\n        <Modal\n          show={this.state.showEditModal}\n          onHide={() => this.setState({ showEditModal: false })}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton className=\"bg-light\">\n            <h5 className=\"mb-0\">Chỉnh sửa playlist</h5>\n          </Modal.Header>\n          <Modal.Body className=\"playlist-modal-body bg-light\">\n            <div className=\"m-3\">\n              <input\n                type=\"text\"\n                placeholder=\"Nhập tên bài hát...\"\n                className=\"filter-input bg-light form-control\"\n                onChange={this.filter}\n                onFocus={() =>\n                  window.removeEventListener(\"keydown\", handleKeyboardEvent)\n                }\n                onBlur={(e) => {\n                  this.props.setFilterResult([]);\n                  e.target.value = \"\";\n                  window.addEventListener(\"keydown\", handleKeyboardEvent);\n                }}\n              />\n\n              <div className=\"filter-suggest box-shadow\">\n                <ul className=\"list-group list-group-flush\">\n                  {filterResult.length !== 0 ? (\n                    <React.Fragment>\n                      {filterResult.map((song) => (\n                        <li\n                          className=\"list-song__item list-group-item\"\n                          key={song._id}\n                          onMouseDown={this.selectSong}\n                          data-id={song._id}\n                        >\n                          <div className=\"search-suggest__item\">\n                            <div\n                              className=\"search-suggest__item--img\"\n                              style={{\n                                backgroundImage: `url(${song.image})`,\n                              }}\n                            ></div>\n                            <p className=\"search-suggest__item--info\">\n                              {song.title}\n                            </p>\n                          </div>\n                        </li>\n                      ))}\n                    </React.Fragment>\n                  ) : (\n                    \"\"\n                  )}\n                </ul>\n              </div>\n            </div>\n            <div className=\"m-3\">\n              <form\n                ref={this.editFormRef}\n                method=\"POST\"\n                id=\"edit-playlist-form\"\n                className=\"list-playlist-modal mb-3 d-flex flex-column\"\n              >\n                {this.props.playlist ? (\n                  <React.Fragment>\n                    {this.state.songs.map((song) => (\n                      <Form.Check\n                        type=\"checkbox\"\n                        className=\"pl-5 pr-5 pt-3\"\n                        key={song._id}\n                        id={song._id}\n                        label={song.title}\n                        defaultChecked\n                      />\n                    ))}\n                  </React.Fragment>\n                ) : (\n                  \"\"\n                )}\n              </form>\n              <button\n                className=\"form-submit mt-auto\"\n                onClick={this.editPlaylist}\n              >\n                Lưu thay đổi\n              </button>\n            </div>\n          </Modal.Body>\n        </Modal>\n\n        {/* Confirm delete modal */}\n        <Modal\n          show={this.state.showDeleteModal}\n          onHide={() => this.setState({ showDeleteModal: false })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Xác nhận</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Bạn có chắc chắn muốn xóa playlist?</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => this.setState({ showDeleteModal: false })}\n            >\n              Trở lại\n            </Button>\n            <Button variant=\"danger\" onClick={this.deleteMyPlaylist}>\n              Xóa\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentIndex: state.player.currentIndex,\n  listPlaying: state.player.listPlaying,\n  user: state.user,\n  likedSongCount: state.song.likedSongCount,\n  myPlaylistCount: state.playlist.myPlaylistCount,\n  filterResult: state.search.filterResult,\n  currentSongId: state.player.currentSongId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  setListPlaying: (listPlaying) => dispatch(setListPlaying(listPlaying)),\n  setLikedSongCount: (count) => dispatch(setLikedSongCount(count)),\n  setMyPlaylistCount: (count) => dispatch(setMyPlaylistCount(count)),\n  setFilterResult: (result) => dispatch(setFilterResult(result)),\n});\n\nconst OptionsListWithRouter = withRouter(OptionsList);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OptionsListWithRouter);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  setListPlaying,\n  setCurrentIndex,\n  playAudio,\n} from \"../../actions/playerAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisV, faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport OptionsList from \"../general/OptionsList\";\nimport { DropdownButton } from \"react-bootstrap\";\n\nclass SongCard extends Component {\n  playAudio = () => {\n    const listPlaying = [this.props.item];\n    this.props.setListPlaying(listPlaying);\n    this.props.setCurrentIndex(0);\n  };\n\n  render() {\n    const { item, currentSongId } = this.props;\n    return (\n      <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 mt-3\">\n        <div className=\"card border-0 h-100\">\n          <div className=\"card-img box-shadow rounded\">\n            <Link to={`/song/detail/${item._id}`}>\n              <img\n                src={item.image}\n                className=\"card-img-custom card-img-top\"\n                alt=\"...\"\n              />\n            </Link>\n            {item._id !== currentSongId ? (\n              <div>\n                <DropdownButton\n                  className=\"btn-ellipsis\"\n                  id=\"dropdown-options\"\n                  drop=\"left\"\n                  title={<FontAwesomeIcon icon={faEllipsisV} />}\n                >\n                  <OptionsList\n                    song={item}\n                    like\n                    addToPlaylist\n                    playNext\n                    playLast\n                    info\n                    copyLink\n                    download\n                  />\n                </DropdownButton>\n\n                <div className=\"card-img__overlay\">\n                  <div className=\"btn-toggle-play\" onClick={this.playAudio}>\n                    <FontAwesomeIcon icon={faPlay} />\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"card-body pl-0 pr-0\">\n            <h6 className=\"card-title\">\n              <Link to={`/song/detail/${item._id}`}>{item.title}</Link>\n            </h6>\n            <h6 className=\"card-artist\">\n              {item.artist.map((artist, index) => (\n                <Link to={`/artist/detail/${artist._id}`} key={artist._id}>\n                  {index > 0 && \", \"}\n                  {artist.name}\n                </Link>\n              ))}\n            </h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentSongId: state.player.currentSongId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setListPlaying: (listPlaying) => dispatch(setListPlaying(listPlaying)),\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  playAudio: () => dispatch(playAudio()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongCard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setArtistDetail } from \"../../actions/artistAction\";\nimport axios from \"axios\";\nimport {\n  setListPlaying,\n  setCurrentIndex,\n  toggleRandom,\n} from \"../../actions/playerAction\";\nimport toast from \"../../helpers/toast\";\nimport SongCard from \"../song/SongCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ArtistDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    const artistId = this.props.match.params.id;\n    axios\n      .get(`/artist/detail/${artistId}`)\n      .then((res) => {\n        const artistDetail = { ...res.data[0], song: res.data[1] };\n        this.props.setArtistDetail(artistDetail);\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  play = () => {\n    const listPlaying = this.props.artistDetail.song;\n    this.props.setListPlaying(listPlaying);\n    this.props.setCurrentIndex(0);\n    if (this.props.isRandom) this.props.toggleRandom();\n  };\n\n  render() {\n    if (this.state.isLoading) return \"\";\n    const { name, image, area, song } = this.props.artistDetail;\n\n    return (\n      <React.Fragment>\n        <div className=\"row section text-center text-lg-left\">\n          <div className=\"col-sm-6 text-center\">\n            <img src={image} alt=\"\" className=\"img-artist-detail box-shadow\" />\n          </div>\n          <div className=\"col-sm-6 text-center\">\n            <h3 className=\"mt-5\">{name}</h3>\n            <p className=\"mt-3\">\n              <b>Khu vực: </b>\n              {area.name}\n            </p>\n            <button\n              className=\"detail-btn btn btn-danger mt-5 box-shadow\"\n              onClick={this.play}\n            >\n              <FontAwesomeIcon icon={faPlay} />\n              <span> PHÁT</span>\n            </button>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"heading\">\n            <div className=\"d-flex align-items-end justify-content-between\">\n              <h4 className=\"mb-0 p-2 rounded bg-light box-shadow\">\n                Bài hát gần đây\n              </h4>\n              <p className=\"p-2 rounded box-shadow\">{song.length} bài hát</p>\n            </div>\n            <hr />\n          </div>\n          <div className=\"row\">\n            {song.map((song) => (\n              <SongCard key={song._id} item={song} />\n            ))}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  artistDetail: state.artist.artistDetail,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setArtistDetail: (artist) => dispatch(setArtistDetail(artist)),\n  setListPlaying: (playlist) => dispatch(setListPlaying(playlist)),\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  toggleRandom: () => dispatch(toggleRandom()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArtistDetail);\n","import * as types from \"../constants/ActionTypes\";\n\nexport const setArtistArea = (artists) => {\n  return {\n    type: types.SET_ARTIST_AREA,\n    artists,\n  };\n};\n\nexport const setArtistDetail = (artist) => {\n  return {\n    type: types.SET_ARTIST_DETAIL,\n    artist,\n  };\n};\n","import React, { Component } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nclass MyPagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      active: 1,\n      query: \"\",\n    };\n  }\n  componentDidMount() {\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n    if (query.get(\"q\")) this.setState({ query: `q=${query.get(\"q\")}&` });\n    let active = Number(query.get(\"page\"));\n    if (!active) active = 1;\n    this.setState({ active }, () => {\n      let items = [];\n      for (let i = 2; i < this.props.pageNums; i++) {\n        if (\n          (i >= this.state.active - 1 && i <= this.state.active + 1) ||\n          (i <= 4 && this.state.active <= 2) ||\n          (i >= this.props.pageNums - 3 && active >= this.props.pageNums - 2)\n        )\n          items.push(\n            <Pagination.Item\n              key={i}\n              active={i === this.state.active}\n              activeLabel=\"\"\n              onClick={this.selectPage}\n            >\n              {i}\n            </Pagination.Item>\n          );\n      }\n      this.setState({ items });\n    });\n  }\n\n  handlePrev = () => {\n    const { active } = this.state;\n    this.setState({ active: active - 1 }, () => {\n      const { history } = this.props;\n      history.push(\n        `${history.location.pathname}?${this.state.query}page=${this.state.active}`\n      );\n    });\n  };\n\n  handleNext = () => {\n    const { active } = this.state;\n    this.setState({ active: active + 1 }, () => {\n      const { history } = this.props;\n      history.push(\n        `${history.location.pathname}?${this.state.query}page=${this.state.active}`\n      );\n    });\n  };\n\n  selectPage = (e) => {\n    const { history } = this.props;\n    history.push(\n      `${history.location.pathname}?${this.state.query}page=${e.target.innerText}`\n    );\n  };\n\n  render() {\n    const { history } = this.props;\n    const { active } = this.state;\n    const { pageNums } = this.props;\n\n    if (pageNums === 1) return \"\";\n\n    return (\n      <div className=\"d-flex justify-content-center mt-2\">\n        <Pagination>\n          <Pagination.Prev disabled={active === 1} onClick={this.handlePrev} />\n          <Pagination.Item\n            key={1}\n            active={active === 1}\n            activeLabel=\"\"\n            onClick={this.selectPage}\n          >\n            {1}\n          </Pagination.Item>\n          {active <= 3 || pageNums <= 5 ? (\n            \"\"\n          ) : (\n            <Pagination.Ellipsis\n              onClick={() =>\n                history.push(\n                  `${history.location.pathname}?${this.state.query}page=${\n                    this.state.active - 2\n                  }`\n                )\n              }\n            />\n          )}\n          {this.state.items}\n          {active >= pageNums - 2 || pageNums <= 5 ? (\n            \"\"\n          ) : (\n            <Pagination.Ellipsis\n              onClick={() =>\n                history.push(\n                  `${history.location.pathname}?${this.state.query}page=${\n                    this.state.active + 2\n                  }`\n                )\n              }\n            />\n          )}\n          <Pagination.Item\n            key={pageNums}\n            active={active === pageNums}\n            activeLabel=\"\"\n            onClick={this.selectPage}\n          >\n            {pageNums}\n          </Pagination.Item>\n          <Pagination.Next\n            disabled={this.state.active === this.props.pageNums}\n            onClick={this.handleNext}\n          />\n        </Pagination>\n      </div>\n    );\n  }\n}\n\nexport default MyPagination;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass ArtistCard extends Component {\n  render() {\n    const { item } = this.props;\n    return (\n      <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 mt-3\">\n        <div className=\"card border-0 h-100\">\n          <div className=\"card-img box-shadow rounded-circle\">\n            <Link to={`/artist/detail/${item._id}`}>\n              <img\n                src={item.image}\n                className=\"card-img-custom card-img-top rounded-circle\"\n                alt=\"...\"\n              />\n            </Link>\n          </div>\n          <div className=\"card-body pl-0 pr-0\">\n            <h6 className=\"card-title text-center\">\n              <Link to={`/artist/detail/${item._id}`}>{item.name}</Link>\n            </h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArtistCard);\n","import { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { Component } from \"react\";\n\nclass Blank extends Component {\n  render() {\n    return (\n      <div className=\"blank\">\n        <FontAwesomeIcon icon={faBan} className=\"blank__icon\"/>\n        <i className=\"pl-2 pr-2\">Không tìm thấy kết quả phù hợp!</i>\n      </div>\n    );\n  }\n}\n\nexport default Blank;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { setArtistArea } from \"../../actions/artistAction\";\nimport MyPagination from \"../general/MyPagination\";\nimport ArtistCard from \"./ArtistCard\";\nimport Blank from \"../general/Blank\";\nimport { NUMBER_OF_ITEM_PER_PAGE } from \"../../constants/Config\";\nimport toast from \"../../helpers/toast\";\n\nclass ListArtist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pageNums: null,\n    };\n  }\n\n  componentDidMount() {\n    const { areaId } = this.props.match.params;\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n\n    function getArtistArea() {\n      return axios.get(`/artist/${areaId}?page=${query.get(\"page\")}`);\n    }\n\n    function getCount() {\n      return axios.get(`/artist/${areaId}/count`);\n    }\n\n    Promise.all([getArtistArea(), getCount()])\n      .then((results) => {\n        const artistArea = results[0].data;\n        const count = results[1].data;\n        this.props.setArtistArea(artistArea);\n        this.setState({\n          pageNums: Math.ceil(count / NUMBER_OF_ITEM_PER_PAGE),\n        });\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  render() {\n    if (this.state.isLoading || this.state.pageNums === null) return \"\";\n    const { artistArea } = this.props;\n    if (artistArea.length === 0) return <Blank />;\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          {artistArea.map((artist) => (\n            <ArtistCard key={artist._id} item={artist} />\n          ))}\n        </div>\n        <MyPagination\n          pageNums={this.state.pageNums}\n          history={this.props.history}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  artistArea: state.artist.artistArea,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setArtistArea: (artists) => dispatch(setArtistArea(artists)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListArtist);\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport ListArtist from \"./ListArtist\";\n\nclass Artists extends Component {\n  render() {\n    const { areas } = this.props;\n    return (\n      <React.Fragment>\n        <Route path=\"/artist/:areaId\">\n          {({ match, history }) => {\n            const { areaId } = match ? match.params : {};\n\n            return (\n              <Tabs\n                activeKey={areaId}\n                onSelect={(nextTab) => history.replace(nextTab)}\n              >\n                {areas.map((area) => (\n                  <Tab eventKey={area._id} title={area.name} key={area._id}>\n                    <div className=\"mt-4 mb-4\">\n                      {areaId === area._id ? (\n                        <ListArtist match={match} history={history} />\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </Tab>\n                ))}\n              </Tabs>\n            );\n          }}\n        </Route>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  areas: state.area,\n});\n\nexport default connect(mapStateToProps)(Artists);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/playerAction\";\nimport OptionsList from \"./OptionsList\";\nimport { DropdownButton } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\n\nclass RightSidebar extends Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentIndex !== this.props.currentIndex) {\n      document\n        .querySelector(\".list-song__item.active\")\n        .scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  }\n\n  pickSong = (e) => {\n    const songNode = e.target.closest(\".list-song__item:not(.active)\");\n    const songOption = e.target.closest(\".song-options\");\n    if (songNode && !songOption) {\n      const newIndex = Number(songNode.dataset.index);\n      this.props.setCurrentIndex(newIndex);\n    }\n  };\n\n  render() {\n    const { listPlaying } = this.props;\n    return (\n      <div className=\"right-sidebar box-shadow\">\n        <div className=\"right-sidebar__header\">Danh sách phát</div>\n        <div className=\"right-sidebar__body\">\n          <ul\n            className=\"list-group list-group-flush\"\n            onClick={(e) => this.pickSong(e)}\n          >\n            {listPlaying.map((song, index) => {\n              return (\n                <li\n                  className={`list-song__item list-group-item ${\n                    index === this.props.currentIndex ? \"active\" : \"\"\n                  }`}\n                  key={song._id}\n                  data-index={index}\n                >\n                  <div className=\"song-inline\">\n                    <div\n                      className=\"song-inline__img\"\n                      style={{\n                        backgroundImage: `url(${song.image})`,\n                      }}\n                    ></div>\n                    <div className=\"song-inline__info\">\n                      <p className=\"song-inline__info--title\">{song.title}</p>\n                      <p className=\"song-inline__info--artist\">\n                        {song.artist.map((artist, index) => (\n                          <span key={artist._id}>\n                            {index > 0 && \", \"}\n                            {artist.name}\n                          </span>\n                        ))}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"song-options\">\n                    <DropdownButton\n                      id=\"dropdown-options\"\n                      drop=\"left\"\n                      title={<FontAwesomeIcon icon={faEllipsisH} />}\n                    >\n                      <OptionsList\n                        song={song}\n                        like\n                        addToPlaylist\n                        playNext\n                        playLast\n                        remove\n                        info\n                        copyLink\n                        download\n                      />\n                    </DropdownButton>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentIndex: state.player.currentIndex,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentIndex: (newIndex) => dispatch(actions.setCurrentIndex(newIndex)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSidebar);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { msToISO } from \"../../helpers/convertTime\";\nimport * as playerActions from \"../../actions/playerAction\";\nimport RightSidebar from \"./RightSidebar\";\nimport OptionsList from \"./OptionsList\";\nimport { setHistoryListen } from \"../../actions/songAction\";\nimport { DropdownButton } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStepBackward,\n  faPause,\n  faPlay,\n  faRandom,\n  faRedo,\n  faStepForward,\n  faEllipsisV,\n  faMusic,\n  faVolumeMute,\n  faVolumeUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport handleKeyboardEvent from \"../../helpers/handleKeyboardEvent\";\nimport axios from \"axios\";\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listenTime: 0,\n      prevVolume: 1,\n      originalListPlaying: [],\n    };\n    this.audioRef = React.createRef();\n    this.progressRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.rightSidebarRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const audio = this.audioRef.current;\n\n    //audio pause when component did mount\n    this.props.pauseAudio();\n\n    // load audio status\n    if (audio !== null) {\n      audio.currentTime = this.props.currentTime;\n      audio.volume = this.props.volume;\n    }\n\n    window.addEventListener(\"keydown\", handleKeyboardEvent);\n\n    // hide right sidebar when click outside player\n    document.addEventListener(\"click\", (e) => {\n      if (\n        this.wrapperRef.current &&\n        !this.wrapperRef.current.contains(e.target)\n      ) {\n        this.rightSidebarRef.current.checked = false;\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const audio = this.audioRef.current;\n    const { currentSongId, listPlaying, volume, user } = this.props;\n\n    // play audio if audio is changed\n    if (prevProps.currentSongId !== currentSongId) audio.play();\n\n    // update audio volume\n    if (prevProps.volume !== volume) audio.volume = volume;\n\n    // update list playing when add an audio to it\n    if (\n      prevProps.listPlaying.length &&\n      prevProps.listPlaying.length < listPlaying.length\n    ) {\n      const oldListId = prevProps.listPlaying.map((song) => song._id);\n      const addedSong = listPlaying.filter(\n        (song) => !oldListId.includes(song._id)\n      );\n      const newList = [...this.state.originalListPlaying].concat(addedSong);\n      this.setState({ originalListPlaying: newList });\n    }\n\n    // update list playing when remove an audio from it\n    if (prevProps.listPlaying.length > listPlaying.length) {\n      const newListId = listPlaying.map((song) => song._id);\n      const removedSong = prevProps.listPlaying.filter(\n        (song) => !newListId.includes(song._id)\n      );\n      const removedSongIndex = this.state.originalListPlaying.findIndex(\n        (song) => song._id === removedSong[0]._id\n      );\n      const newList = [...this.state.originalListPlaying];\n      newList.splice(removedSongIndex, 1);\n      this.setState({ originalListPlaying: newList });\n    }\n\n    // audio is played at least 15s\n    if (\n      prevState.listenTime !== this.state.listenTime &&\n      this.state.listenTime === 15\n    ) {\n      if (user.userToken) {\n        axios\n          .get(\n            `/interaction/playing?user=${user.userId}&song=${currentSongId}`,\n            {\n              headers: {\n                Authorization: `Bearer ${user.userToken}`,\n              },\n            }\n          )\n          .catch(console.log);\n      }\n      axios.get(`/song/${currentSongId}/playing/update`).catch(console.log);\n    }\n  }\n\n  handleTogglePlay = () => {\n    const audio = this.audioRef.current;\n    if (this.props.isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n  };\n\n  handlePlay = () => {\n    let timeCounter = setInterval(\n      () => this.setState({ listenTime: this.state.listenTime + 1 }),\n      1000\n    );\n    this.setState({ timeCounter });\n    this.props.playAudio();\n  };\n\n  handlePause = () => {\n    clearInterval(this.state.timeCounter);\n    this.props.pauseAudio();\n  };\n\n  handleTimeUpdate = () => {\n    const audio = this.audioRef.current;\n    let newPercent = 0;\n    //update current time and progress\n    if (audio.duration) {\n      newPercent = Math.ceil((audio.currentTime / audio.duration) * 100);\n    }\n    this.props.setCurrentTime(audio.currentTime);\n    this.props.setProgressPercent(newPercent);\n  };\n\n  //for seeking\n  handleProgress = () => {\n    const audio = this.audioRef.current;\n    const progress = this.progressRef.current;\n    const seekTime = (audio.duration * progress.value) / 100;\n    audio.currentTime = seekTime;\n  };\n\n  handleLoadedData = () => {\n    const audio = this.audioRef.current;\n    const { listPlaying, currentIndex, historyListen } = this.props;\n\n    //reset playing time counter\n    this.setState({ listenTime: 0 });\n    clearInterval(this.state.timeCounter);\n\n    //set duration\n    this.props.setDuration(audio.duration);\n\n    //set current song\n    const currentSongId = listPlaying[currentIndex]._id;\n    this.props.setCurrentSongId(currentSongId);\n\n    //set history listen\n    let newHistory = [...historyListen];\n    const indexExisted = newHistory.findIndex(\n      (song) => song._id === currentSongId\n    );\n    if (indexExisted !== -1) newHistory.splice(indexExisted, 1);\n    if (newHistory.length >= 24) {\n      newHistory.pop();\n    }\n    newHistory.unshift(listPlaying[currentIndex]);\n    this.props.setHistoryListen(newHistory);\n  };\n\n  handlePrev = () => {\n    const { currentIndex } = this.props;\n    let newIndex;\n    if (currentIndex >= 1) {\n      newIndex = currentIndex - 1;\n      this.props.setCurrentIndex(newIndex);\n    }\n  };\n\n  handleNext = () => {\n    const { currentIndex, listPlaying, repeat } = this.props;\n    let newIndex;\n    if (repeat === \"none\" && currentIndex < listPlaying.length - 1) {\n      newIndex = currentIndex + 1;\n      this.props.setCurrentIndex(newIndex);\n    }\n    if (repeat === \"all\") {\n      newIndex = (currentIndex + 1) % listPlaying.length;\n      this.props.setCurrentIndex(newIndex);\n    }\n  };\n\n  handleRandom = () => {\n    const { isRandom, currentIndex, listPlaying, currentSongId } = this.props;\n    if (!isRandom) {\n      this.setState(\n        { originalListPlaying: listPlaying, originIndex: currentIndex },\n        () => {\n          const listPlayingShuffle = [...listPlaying];\n          const currentSong = listPlaying[currentIndex];\n          listPlayingShuffle.splice(currentIndex, 1);\n          listPlayingShuffle.sort(() => Math.random() - 0.5);\n          listPlayingShuffle.unshift(currentSong);\n          this.props.setCurrentIndex(0);\n          this.props.setListPlaying(listPlayingShuffle);\n        }\n      );\n    } else {\n      const { originalListPlaying } = this.state;\n      const prevIndex = originalListPlaying.findIndex(\n        (song) => song._id === currentSongId\n      );\n      this.props.setCurrentIndex(prevIndex);\n      this.props.setListPlaying(originalListPlaying);\n    }\n    this.props.toggleRandom();\n  };\n\n  handleVolume = (e) => {\n    const newVolume = e.target.valueAsNumber;\n    this.audioRef.current.volume = newVolume;\n    this.props.setVolume(newVolume);\n  };\n\n  handleVolumeBtn = () => {\n    const audio = this.audioRef.current;\n    if (audio.volume !== 0) {\n      this.setState({ prevVolume: audio.volume });\n      audio.volume = 0;\n    } else {\n      audio.volume = this.state.prevVolume;\n    }\n  };\n\n  handleEnded = () => {\n    if (this.props.repeat === \"one\") {\n      this.audioRef.current.play();\n    } else {\n      this.handleNext();\n    }\n  };\n\n  render() {\n    if (this.props.listPlaying.length === 0) return \"\";\n\n    const {\n      listPlaying,\n      isPlaying,\n      currentIndex,\n      currentSongId,\n      progressPercent,\n      currentTime,\n      duration,\n      repeat,\n      isRandom,\n      volume,\n    } = this.props;\n\n    const audio = this.audioRef.current;\n\n    return (\n      <div ref={this.wrapperRef} className=\"player box-shadow\">\n        <div className=\"player__song\">\n          <Link to={`/song/detail/${currentSongId}`}>\n            <div\n              className={`player__song--img box-shadow ${\n                isPlaying ? \"spin\" : \"\"\n              }`}\n              style={{\n                backgroundImage: `url(${listPlaying[currentIndex].image})`,\n              }}\n            ></div>\n          </Link>\n          <div className=\"player__song--info d-none d-sm-block\">\n            <p className=\"player-song-title\">\n              <Link to={`/song/detail/${currentSongId}`}>\n                {listPlaying[currentIndex].title}\n              </Link>\n            </p>\n            <p className=\"player-song-artist\">\n              {listPlaying[currentIndex].artist.map((artist, index) => (\n                <Link to={`/artist/detail/${artist._id}`} key={artist._id}>\n                  {index > 0 && \", \"}\n                  {artist.name}\n                </Link>\n              ))}\n            </p>\n          </div>\n        </div>\n        <div className=\"player__controls\">\n          <div className=\"control-wrapper\">\n            {repeat === \"none\" ? (\n              <div\n                className=\"control__btn\"\n                onClick={() => this.props.setRepeat(\"one\")}\n              >\n                <FontAwesomeIcon icon={faRedo} />\n              </div>\n            ) : (\n              \"\"\n            )}\n            {repeat === \"one\" ? (\n              <div\n                className=\"control__btn active\"\n                onClick={() => this.props.setRepeat(\"all\")}\n              >\n                <FontAwesomeIcon icon={faRedo} />\n                <span className=\"repeat\">1</span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {repeat === \"all\" ? (\n              <div\n                className=\"control__btn active\"\n                onClick={() => this.props.setRepeat(\"none\")}\n              >\n                <FontAwesomeIcon icon={faRedo} />\n                <span className=\"repeat\">all</span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {currentIndex === 0 ? (\n              <div className=\"control__btn disabled\">\n                <FontAwesomeIcon icon={faStepBackward} />\n              </div>\n            ) : (\n              <div className=\"control__btn\" onClick={this.handlePrev}>\n                <FontAwesomeIcon icon={faStepBackward} />\n              </div>\n            )}\n            <div className=\"btn-toggle-play\" onClick={this.handleTogglePlay}>\n              {isPlaying ? (\n                <FontAwesomeIcon icon={faPause} />\n              ) : (\n                <FontAwesomeIcon icon={faPlay} />\n              )}\n            </div>\n            <div className=\"control__btn\" onClick={this.handleNext}>\n              <FontAwesomeIcon icon={faStepForward} />\n            </div>\n            <div\n              className={`control__btn ${isRandom ? \"active\" : \"\"}`}\n              onClick={this.handleRandom}\n            >\n              <FontAwesomeIcon icon={faRandom} />\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center\">\n            <audio\n              id=\"player-audio\"\n              ref={this.audioRef}\n              src={listPlaying[currentIndex].url}\n              onLoadedData={this.handleLoadedData}\n              onPlay={this.handlePlay}\n              onPause={this.handlePause}\n              onTimeUpdate={this.handleTimeUpdate}\n              onEnded={this.handleEnded}\n              onVolumeChange={() =>\n                this.props.setVolume(audio ? audio.volume : volume)\n              }\n            />\n            <div className=\"progress-time\">{msToISO(currentTime)}</div>\n            <input\n              className=\"progress\"\n              type=\"range\"\n              ref={this.progressRef}\n              value={progressPercent}\n              step={1}\n              min={0}\n              max={100}\n              onChange={this.handleProgress}\n            />\n            <div className=\"progress-time\">{msToISO(duration)}</div>\n          </div>\n        </div>\n        <div className=\"player__options d-none d-md-flex\">\n          <div className=\"d-none d-lg-flex ml-3 mr-3\">\n            <div className=\"control__btn\" onClick={this.handleVolumeBtn}>\n              {volume === 0 ? (\n                <FontAwesomeIcon icon={faVolumeMute} />\n              ) : (\n                <FontAwesomeIcon icon={faVolumeUp} />\n              )}\n            </div>\n            <div className=\"d-flex align-items-center\">\n              <input\n                className=\"volume\"\n                type=\"range\"\n                min={0}\n                max={1}\n                step={0.02}\n                value={volume}\n                onChange={this.handleVolume}\n              />\n            </div>\n          </div>\n          <DropdownButton\n            id=\"dropdown-options\"\n            drop=\"left\"\n            title={<FontAwesomeIcon icon={faEllipsisV} />}\n          >\n            <OptionsList\n              song={listPlaying[currentIndex]}\n              like\n              addToPlaylist\n              info\n              copyLink\n              download\n            />\n          </DropdownButton>\n          <input\n            type=\"checkbox\"\n            hidden\n            className=\"list-songs-input\"\n            id=\"list-songs-checkbox\"\n            ref={this.rightSidebarRef}\n          />\n          <label\n            htmlFor=\"list-songs-checkbox\"\n            className=\"control__btn ml-2 mr-4\"\n          >\n            <FontAwesomeIcon icon={faMusic} />\n          </label>\n          <RightSidebar listPlaying={listPlaying} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isPlaying: state.player.isPlaying,\n  isRandom: state.player.isRandom,\n  repeat: state.player.repeat,\n  volume: state.player.volume,\n  currentIndex: state.player.currentIndex,\n  currentSongId: state.player.currentSongId,\n  progressPercent: state.player.progressPercent,\n  currentTime: state.player.currentTime,\n  duration: state.player.duration,\n  listPlaying: state.player.listPlaying,\n  user: state.user,\n  historyListen: state.song.historyListen,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  playAudio: () => dispatch(playerActions.playAudio()),\n  pauseAudio: () => dispatch(playerActions.pauseAudio()),\n  setCurrentTime: (newTime) => dispatch(playerActions.setCurrentTime(newTime)),\n  setCurrentSongId: (currentSongId) =>\n    dispatch(playerActions.setCurrentSongId(currentSongId)),\n  setProgressPercent: (newPercent) =>\n    dispatch(playerActions.setProgressPercent(newPercent)),\n  setCurrentIndex: (newIndex) =>\n    dispatch(playerActions.setCurrentIndex(newIndex)),\n  setDuration: (newDuration) =>\n    dispatch(playerActions.setDuration(newDuration)),\n  setRepeat: (value) => dispatch(playerActions.setRepeat(value)),\n  toggleRandom: () => dispatch(playerActions.toggleRandom()),\n  setVolume: (newVolume) => dispatch(playerActions.setVolume(newVolume)),\n  setListPlaying: (listPlaying) =>\n    dispatch(playerActions.setListPlaying(listPlaying)),\n  setHistoryListen: (songs) => dispatch(setHistoryListen(songs)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\n","import React, { Component } from \"react\";\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading\">\n        <div className=\"loader\">\n          <div className=\"eq\">\n            <span className=\"eq-bar eq-bar--1\" />\n            <span className=\"eq-bar eq-bar--2\" />\n            <span className=\"eq-bar eq-bar--3\" />\n            <span className=\"eq-bar eq-bar--4\" />\n            <span className=\"eq-bar eq-bar--5\" />\n            <span className=\"eq-bar eq-bar--6\" />\n          </div>\n          <span className=\"loader__text\">Đang tải dữ liệu</span>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  setListPlaying,\n  setCurrentIndex,\n  playAudio,\n} from \"../../actions/playerAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEllipsisV,\n  faHeadphonesAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport OptionsList from \"../general/OptionsList\";\nimport { DropdownButton, ListGroup } from \"react-bootstrap\";\n\nclass ListSongInline extends Component {\n  playAudio = (e) => {\n    const songNode = e.target.closest(\".list-song-inline__item\");\n    const songOption = e.target.closest(\".song-options\");\n    const songTitle = e.target.closest(\"#song-title\");\n    const songArtist = e.target.closest(\"#song-artist\");\n    if (songNode && !songTitle && !songArtist && !songOption) {\n      const songIndex = Number(songNode.dataset.index);\n      const listPlaying = [this.props.item[songIndex]];\n      this.props.setListPlaying(listPlaying);\n      this.props.setCurrentIndex(0);\n    }\n  };\n\n  render() {\n    const { item } = this.props;\n    return (\n      <ListGroup>\n        {item.map((song, index) => (\n          <ListGroup.Item\n            className=\"list-song-inline__item mb-1 border-0 bg-light\"\n            key={song._id}\n            onClick={this.playAudio}\n            data-index={index}\n          >\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div className=\"song-inline\">\n                <div className=\"ml-2 mr-4 text-primary\">{index + 1}</div>\n                <div\n                  className=\"song-inline__img\"\n                  style={{\n                    backgroundImage: `url(${song.image})`,\n                  }}\n                ></div>\n                <div className=\"list-song-inline__info\">\n                  <h6 className=\"list-song-inline__info--title\">\n                    <Link id=\"song-title\" to={`/song/detail/${song._id}`}>\n                      {song.title}\n                    </Link>\n                  </h6>\n                  <h6 className=\"list-song-inline__info--artist\">\n                    {song.artist.map((artist, index) => (\n                      <Link\n                        id=\"song-artist\"\n                        to={`/artist/detail/${artist._id}`}\n                        key={artist._id}\n                      >\n                        {index > 0 && \", \"}\n                        {artist.name}\n                      </Link>\n                    ))}\n                  </h6>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center\">\n                <FontAwesomeIcon icon={faHeadphonesAlt} />\n                <div className=\"ml-2 pt-1\">{`${Number(\n                  song.chartcount / 1000\n                ).toFixed(2)}K`}</div>\n                <div className=\"song-options\">\n                  <DropdownButton\n                    id=\"dropdown-options\"\n                    drop=\"left\"\n                    title={<FontAwesomeIcon icon={faEllipsisV} />}\n                  >\n                    <OptionsList\n                      song={song}\n                      like\n                      addToPlaylist\n                      playNext\n                      playLast\n                      info\n                      copyLink\n                      download\n                    />\n                  </DropdownButton>\n                </div>\n              </div>\n            </div>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentSongId: state.player.currentSongId,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setListPlaying: (listPlaying) => dispatch(setListPlaying(listPlaying)),\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  playAudio: () => dispatch(playAudio()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSongInline);\n","import React, { Component } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  setCurrentIndex,\n  setListPlaying,\n  toggleRandom,\n} from \"../../actions/playerAction\";\nimport ListSongInline from \"./ListSongInline\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tab: 0,\n    };\n  }\n\n  handleSelect = (nextTab) => {\n    switch (nextTab) {\n      case \"vpop\":\n        this.setState({ tab: 0 });\n        break;\n      case \"usuk\":\n        this.setState({ tab: 1 });\n        break;\n      case \"kpop\":\n        this.setState({ tab: 2 });\n        break;\n      default:\n        break;\n    }\n  };\n\n  playAll = () => {\n    const { chart } = this.props;\n    const { tab } = this.state;\n    const listPlaying = chart[tab];\n    this.props.setListPlaying(listPlaying);\n    this.props.setCurrentIndex(0);\n    if (this.props.isRandom) this.props.toggleRandom();\n  };\n\n  render() {\n    const { chart } = this.props;\n\n    return (\n      <div className=\"section\">\n        <div className=\"heading\">\n          <div className=\"d-flex align-items-end justify-content-between\">\n            <h4 className=\"mb-0 p-2 rounded bg-light box-shadow\">Bảng xếp hạng tuần</h4>\n            <button\n              className=\"btn btn-danger box-shadow\"\n              onClick={this.playAll}\n            >\n              <FontAwesomeIcon icon={faPlay} />\n              <span> PHÁT TẤT CẢ</span>\n            </button>\n          </div>\n          <hr />\n        </div>\n        <Tabs\n          defaultActiveKey=\"vpop\"\n          onSelect={(nextTab) => this.handleSelect(nextTab)}\n        >\n          <Tab eventKey=\"vpop\" title=\"Việt Nam\" key=\"vpop\">\n            <div className=\"mt-4 mb-4\">\n              <ListSongInline item={chart[0]} />\n            </div>\n          </Tab>\n          <Tab eventKey=\"usuk\" title=\"Âu Mỹ\" key=\"usuk\">\n            <div className=\"mt-4 mb-4\">\n              <ListSongInline item={chart[1]} />\n            </div>\n          </Tab>\n          <Tab eventKey=\"kpop\" title=\"Hàn Quốc\" key=\"kpop\">\n            <div className=\"mt-4 mb-4\">\n              <ListSongInline item={chart[2]} />\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isRandom: state.player.isRandom,\n  chart: state.song.chart,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setListPlaying: (playlist) => dispatch(setListPlaying(playlist)),\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  toggleRandom: () => dispatch(toggleRandom()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport SongCard from \"../song/SongCard\";\nimport Chart from \"../song/Chart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  setCurrentIndex,\n  setListPlaying,\n  toggleRandom,\n} from \"../../actions/playerAction\";\n\nclass Recommendation extends Component {\n  playAll = () => {\n    const listPlaying = this.props.recommendation;\n    this.props.setListPlaying(listPlaying);\n    this.props.setCurrentIndex(0);\n    if (this.props.isRandom) this.props.toggleRandom();\n  };\n\n  render() {\n    const { recommendation } = this.props;\n    if (!recommendation)\n      return (\n        <React.Fragment>\n          <p className=\"mt-5 pt-3 mb-5 text-danger text-center\">\n            Dữ liệu nghe nhạc của bạn chưa đủ để sử dụng tính năng này, tiếp tục\n            nghe nhạc để chúng tôi có thể hiểu bạn nhiều hơn!\n          </p>\n          <Chart />\n        </React.Fragment>\n      );\n\n    return (\n      <div className=\"section\">\n        <div className=\"heading\">\n          <div className=\"d-flex align-items-end justify-content-between\">\n            <h4 className=\"mb-0 p-2 rounded bg-light box-shadow\">Gợi ý cho bạn</h4>\n            <button\n              className=\"btn btn-danger box-shadow\"\n              onClick={this.playAll}\n            >\n              <FontAwesomeIcon icon={faPlay} />\n              <span> PHÁT TẤT CẢ</span>\n            </button>\n          </div>\n          <hr />\n        </div>\n        <div className=\"row\">\n          {recommendation.map((song) => (\n            <SongCard key={song._id} item={song} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  recommendation: state.song.recommendation,\n  isPlaying: state.player.isPlaying,\n  isRandom: state.player.isRandom,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setListPlaying: (playlist) => dispatch(setListPlaying(playlist)),\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  toggleRandom: () => dispatch(toggleRandom()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recommendation);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Chart from \"../song/Chart\";\nimport Recommendation from \"../user/Recommendation\";\n\nclass Home extends Component {\n  render() {\n    const { user, recommendation } = this.props;\n\n    return (\n      <React.Fragment>\n        <Chart />\n        {user.userToken && recommendation ? <Recommendation /> : \"\"}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  recommendation: state.song.recommendation,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import * as types from \"../constants/ActionTypes\";\n\nexport const setCurrentUser = (user) => {\n  return {\n    type: types.SET_CURRENT_USER,\n    user,\n  };\n};","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Link, NavLink, Route } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowAltCircleLeft,\n  faHeart,\n  faHistory,\n  faHome,\n  faClipboardList,\n  faMicrophone,\n  faMusic,\n  faListAlt,\n  faHandPointRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.arrowRef = React.createRef();\n  }\n\n  slideOff = () => {\n    const arrow = this.arrowRef.current;\n    //check arrow icon is visible\n    if (arrow.offsetParent) arrow.click();\n  };\n\n  render() {\n    const { areas, userToken, location } = this.props;\n    const areaParam = areas.map((area) => area._id);\n\n    return (\n      <div className=\"sidebar translate-on-md\">\n        <div className=\"sidebar__header\">\n          <div>\n            <Link to=\"/\" onClick={this.slideOff}>\n              <img src={\"/images/logos/logo.svg\"} alt=\"logo-app\" />\n            </Link>\n          </div>\n          <label\n            htmlFor=\"sidebar-checkbox\"\n            className=\"sidebar__header--arrow d-xl-none\"\n            ref={this.arrowRef}\n          >\n            <FontAwesomeIcon icon={faArrowAltCircleLeft} />\n          </label>\n        </div>\n        <nav className=\"sidebar__nav\">\n          <ul className=\"list-group\">\n            <li className=\"sidebar__nav--header\">Music RS</li>\n            <li onClick={this.slideOff}>\n              <NavLink\n                exact\n                to=\"/\"\n                className=\"sidebar__nav--link\"\n                activeClassName=\"active\"\n              >\n                <FontAwesomeIcon icon={faHome} className=\"sidebar-icon\" />\n                <span>Trang chủ</span>\n              </NavLink>\n            </li>\n            <li className=\"sidebar__nav--header\">Khám phá</li>\n            <li onClick={this.slideOff}>\n              <Route path=\"/:slug/:area\">\n                {({ match }) => {\n                  const { slug } = match ? match.params : {};\n                  const { area } = match ? match.params : {};\n                  return (\n                    <NavLink\n                      to={`/song/${areas[0]._id}/${areas[0].category[0]._id}`}\n                      isActive={() =>\n                        slug === \"song\" && areaParam.includes(area)\n                      }\n                      className=\"sidebar__nav--link\"\n                      activeClassName=\"active\"\n                    >\n                      <FontAwesomeIcon\n                        icon={faMusic}\n                        className=\"sidebar-icon\"\n                      />\n                      <span>Bài hát</span>\n                    </NavLink>\n                  );\n                }}\n              </Route>\n            </li>\n            <li onClick={this.slideOff}>\n              <Route path=\"/:slug/:area\">\n                {({ match }) => {\n                  const { slug } = match ? match.params : {};\n                  const { area } = match ? match.params : {};\n                  return (\n                    <NavLink\n                      to={`/playlist/${areas[0]._id}`}\n                      isActive={() =>\n                        slug === \"playlist\" && areaParam.includes(area)\n                      }\n                      className=\"sidebar__nav--link\"\n                      activeClassName=\"active\"\n                    >\n                      <FontAwesomeIcon\n                        icon={faClipboardList}\n                        className=\"sidebar-icon\"\n                      />\n                      <span>Playlist</span>\n                    </NavLink>\n                  );\n                }}\n              </Route>\n            </li>\n            <li onClick={this.slideOff}>\n              <Route path=\"/:slug/:area\">\n                {({ match }) => {\n                  const { slug } = match ? match.params : {};\n                  const { area } = match ? match.params : {};\n                  return (\n                    <NavLink\n                      to={`/artist/${areas[0]._id}`}\n                      isActive={() =>\n                        slug === \"artist\" && areaParam.includes(area)\n                      }\n                      className=\"sidebar__nav--link\"\n                      activeClassName=\"active\"\n                    >\n                      <FontAwesomeIcon\n                        icon={faMicrophone}\n                        className=\"sidebar-icon\"\n                      />\n                      <span>Nghệ sĩ</span>\n                    </NavLink>\n                  );\n                }}\n              </Route>\n            </li>\n            {userToken ? (\n              <React.Fragment>\n                <li className=\"sidebar__nav--header\">Cá nhân</li>\n                <li onClick={this.slideOff}>\n                  <NavLink\n                    exact\n                    to={`/user/recommend`}\n                    className=\"sidebar__nav--link\"\n                    activeClassName=\"active\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faHandPointRight}\n                      className=\"sidebar-icon\"\n                    />\n                    <span>Gợi ý cho bạn</span>\n                  </NavLink>\n                </li>\n                <li onClick={this.slideOff}>\n                  <NavLink\n                    exact\n                    to={`/user/liked-song`}\n                    className=\"sidebar__nav--link\"\n                    activeClassName=\"active\"\n                  >\n                    <FontAwesomeIcon icon={faHeart} className=\"sidebar-icon\" />\n                    <span>Bài hát yêu thích</span>\n                  </NavLink>\n                </li>\n                <li onClick={this.slideOff}>\n                  <NavLink\n                    exact\n                    to=\"/user/my-playlist\"\n                    className=\"sidebar__nav--link\"\n                    activeClassName=\"active\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faListAlt}\n                      className=\"sidebar-icon\"\n                    />\n                    <span>Playlist của tôi</span>\n                  </NavLink>\n                </li>\n                <li onClick={this.slideOff}>\n                  <NavLink\n                    exact\n                    to=\"/user/history\"\n                    className=\"sidebar__nav--link\"\n                    activeClassName=\"active\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faHistory}\n                      className=\"sidebar-icon\"\n                    />\n                    <span>Lịch sử</span>\n                  </NavLink>\n                </li>\n              </React.Fragment>\n            ) : (\n              <div className=\"sidebar__footer box-shadow\">\n                <p className=\"text-center mb-2\">\n                  Đăng nhập để có trải nghiệm tốt hơn tại MusicRS!\n                </p>\n                <Link\n                  to={{\n                    pathname: \"/login\",\n                    state: { prevPath: location.pathname },\n                  }}\n                  className=\"btn btn-block btn-danger\"\n                >\n                  <span>Đăng nhập</span>\n                </Link>\n              </div>\n            )}\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  areas: state.area,\n  userToken: state.user.userToken,\n});\n\nconst SidebarWithRouter = withRouter(Sidebar);\nexport default connect(mapStateToProps)(SidebarWithRouter);\n","// EXAMPLE USAGE:\n\n// Validator({\n//   form: \"#register-form\",\n//   formGroupSelector: \".form-group\",\n//   errorSelector: \".form-message\",\n//   rules: [\n//     Validator.isRequired(\"#username\"),\n//     Validator.isRequired(\"#email\"),\n//     Validator.isRequired(\"#password\"),\n//     Validator.isRequired(\"#password_confirmation\"),\n//     Validator.isEmail(\"#email\"),\n//     Validator.minLength(\"#password\", 6),\n//     Validator.isConfirmed(\n//       \"#password_confirmation\",\n//       () => document.querySelector(\"#register-form #password\").value,\n//       \"Mật khẩu nhập lại không chính xác\"\n//     ),\n//   ],\n//   onSubmit: (data) => {\n//     // Call API\n//   },\n// });\n\nexport default function Validator(options) {\n  const getParent = (element, selector) => {\n    while (element.parentElement) {\n      if (element.parentElement.matches(selector)) {\n        return element.parentElement;\n      }\n      element = element.parentElement;\n    }\n  };\n\n  // { selector: [rule]}\n  let selectorRules = {};\n\n  // get elements of form\n  let formElement = document.querySelector(options.form);\n  if (formElement) {\n    formElement.onsubmit = (e) => {\n      e.preventDefault();\n      let isFormValid = true;\n\n      // validate\n      options.rules.forEach((rule) => {\n        let inputElement = formElement.querySelector(rule.selector);\n        let isValid = validate(inputElement, rule);\n        if (!isValid) {\n          isFormValid = false;\n        }\n      });\n\n      if (isFormValid) {\n        // submit by javascript\n        if (typeof options.onSubmit === \"function\") {\n          let enableInputs = formElement.querySelectorAll(\"[name]\");\n          let formValues = Array.from(enableInputs).reduce((values, input) => {\n            switch (input.type) {\n              case \"radio\":\n                values[input.name] = formElement.querySelector(\n                  `input[name=\"${input.name}\"]:checked`\n                ).value;\n                break;\n              case \"checkbox\":\n                if (!input.matches(\":checked\")) {\n                  values[input.name] = \"\";\n                  return values;\n                }\n                if (!Array.isArray(values[input.name])) {\n                  values[input.name] = [];\n                }\n                values[input.name].push(input.value);\n                break;\n              case \"file\":\n                values[input.name] = input.files;\n                break;\n              default:\n                values[input.name] = input.value;\n            }\n            return values;\n          }, {});\n          options.onSubmit(formValues);\n        }\n        // submit by form\n        else {\n          formElement.submit();\n        }\n      }\n    };\n\n    options.rules.forEach((rule) => {\n      if (Array.isArray(selectorRules[rule.selector])) {\n        selectorRules[rule.selector].push(rule.test);\n      } else {\n        selectorRules[rule.selector] = [rule.test];\n      }\n\n      let inputElements = formElement.querySelectorAll(rule.selector);\n\n      Array.from(inputElements).forEach((inputElement) => {\n        // input onblur\n        inputElement.onblur = () => {\n          validate(inputElement, rule);\n        };\n\n        // when user input something\n        inputElement.oninput = () => {\n          let errorElement = getParent(\n            inputElement,\n            options.formGroupSelector\n          ).querySelector(options.errorSelector);\n          errorElement.innerText = \"\";\n          getParent(inputElement, options.formGroupSelector).classList.remove(\n            \"invalid\"\n          );\n        };\n      });\n    });\n  }\n\n  const validate = (inputElement, rule) => {\n    let errorElement = getParent(\n      inputElement,\n      options.formGroupSelector\n    ).querySelector(options.errorSelector);\n    let errorMessage;\n\n    // get all rules from 1 field\n    let rules = selectorRules[rule.selector];\n\n    // get first error in 1 field\n    for (let i = 0; i < rules.length; ++i) {\n      switch (inputElement.type) {\n        case \"radio\":\n        case \"checkbox\":\n          errorMessage = rules[i](\n            formElement.querySelector(rule.selector + \":checked\")\n          );\n          break;\n        default:\n          errorMessage = rules[i](inputElement.value);\n      }\n      if (errorMessage) break;\n    }\n\n    if (errorMessage) {\n      errorElement.innerText = errorMessage;\n      getParent(inputElement, options.formGroupSelector).classList.add(\n        \"invalid\"\n      );\n    } else {\n      errorElement.innerText = \"\";\n      getParent(inputElement, options.formGroupSelector).classList.remove(\n        \"invalid\"\n      );\n    }\n    return !errorMessage;\n  };\n}\n\n// define rules\n// !error ? undefined : ( messageCustom || messageDefault)\nValidator.isRequired = (selector, message = \"Vui lòng nhập trường này!\") => ({\n  selector,\n  test(value) {\n    return value ? undefined : message;\n  },\n});\n\nValidator.isEmail = (selector, message = \"Vui lòng nhập email chính xác!\") => ({\n  selector,\n  test(value) {\n    let regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return regex.test(value) ? undefined : message;\n  },\n});\n\nValidator.minLength = (\n  selector,\n  min,\n  message = `Vui lòng nhập tối thiểu ${min} kí tự!`\n) => ({\n  selector,\n  test(value) {\n    return value.trim().length >= min ? undefined : message;\n  },\n});\n\nValidator.isConfirmed = (\n  selector,\n  getConfirmValue,\n  message = \"Nhập lại không trùng khớp!\"\n) => ({\n  selector,\n  test(value) {\n    return value === getConfirmValue() ? undefined : message;\n  },\n});\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"../../actions/userAction\";\nimport { setSuggestion } from \"../../actions/searchAction\";\nimport { setLikedSongCount, setRecommendation } from \"../../actions/songAction\";\nimport {\n  setMyPlaylist,\n  setMyPlaylistCount,\n} from \"../../actions/playlistAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faSearch,\n  faSignOutAlt,\n  faUser,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Sidebar from \"./Sidebar\";\nimport { Button, Dropdown, DropdownButton, Modal } from \"react-bootstrap\";\nimport debounce from \"../../helpers/debounce\";\nimport axios from \"axios\";\nimport toast from \"../../helpers/toast\";\nimport handleKeyboardEvent from \"../../helpers/handleKeyboardEvent\";\nimport Validator from \"../../helpers/validator\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLogoutModal: false,\n      showProfileModal: false,\n      usernameMessage: \"\",\n      emailMessage: \"\",\n      passwordMessage: \"\",\n      update: false,\n    };\n    this.searchRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.showProfileModal !== this.state.showProfileModal) &\n      !this.state.showProfileModal\n    )\n      this.setState({ update: false });\n    if (prevState.update !== this.state.update && this.state.update)\n      Validator({\n        form: \"#update-profile-form\",\n        formGroupSelector: \".form-group\",\n        errorSelector: \".form-message\",\n        rules: [\n          Validator.isRequired(\"#username\"),\n          Validator.isRequired(\"#email\"),\n          Validator.isRequired(\"#password\"),\n          Validator.minLength(\"#username\", 4),\n          Validator.isEmail(\"#email\"),\n          Validator.minLength(\"#password\", 6),\n        ],\n        onSubmit: (data) => {\n          if (!this.state.usernameMessage && !this.state.emailMessage) {\n            const { user } = this.props;\n            axios\n              .post(`/user/${user.userId}/update-profile/`, data, {\n                headers: {\n                  Authorization: `Bearer ${user.userToken}`,\n                },\n              })\n              .then((res) => {\n                const user = res.data;\n                this.props.setCurrentUser(user);\n                this.setState({ showProfileModal: false });\n                toast({\n                  title: \"Thành công!\",\n                  message: \"Cập nhật tài khoản thành công!\",\n                  type: \"success\",\n                });\n              })\n              .catch((error) => {\n                const errorData = error.response.data;\n                if (errorData.field === \"password\")\n                  this.setState({ passwordMessage: errorData.message });\n                toast({\n                  title: \"Thất bại!\",\n                  message: `${\n                    error.response\n                      ? error.response.data.message\n                      : \"Có lỗi xảy ra!\"\n                  }`,\n                  type: \"error\",\n                });\n              });\n          }\n        },\n      });\n  }\n\n  checkExisted = (e) => {\n    let data = {};\n    data[e.target.name] = e.target.value;\n    axios\n      .post(\"/user/register/existed\", data)\n      .then((res) => {\n        const result = res.data;\n        if (result.field === \"username\")\n          this.setState({ usernameMessage: result.message });\n        if (result.field === \"email\")\n          this.setState({ emailMessage: result.message });\n      })\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  suggest = debounce((e) => {\n    axios\n      .get(`/search?q=${e.target.value}`)\n      .then((res) => {\n        const suggestion = res.data;\n        this.props.setSuggestion(suggestion);\n      })\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }, 500);\n\n  handleSelect = (e) => {\n    const input = this.searchRef.current;\n    const selectedNode = e.target.closest(\".list-song__item.list-group-item\");\n    const { type, id } = selectedNode.dataset;\n    this.props.history.push(`/${type}/detail/${id}`);\n    input.blur();\n  };\n\n  search = () => {\n    const input = this.searchRef.current;\n    this.props.history.push(`/search/song?q=${input.value}`);\n    input.blur();\n  };\n\n  onEnter = (e) => {\n    if (e.key === \"Enter\") this.search();\n  };\n\n  logout = () => {\n    this.props.setCurrentUser(null);\n    this.props.setRecommendation(null);\n    this.props.setLikedSongCount(null);\n    this.props.setMyPlaylist(null);\n    this.props.setMyPlaylistCount(null);\n    this.setState({ showLogoutModal: false });\n    this.props.history.push(\"/\");\n    toast({\n      title: \"Thành công!\",\n      message: \"Bạn đã đăng xuất khỏi hệ thống!\",\n      type: \"success\",\n    });\n  };\n\n  render() {\n    const { user, suggestion, location } = this.props;\n\n    return (\n      <div className=\"header\">\n        <div className=\"header__content\">\n          <label\n            htmlFor=\"sidebar-checkbox\"\n            className=\"header__content--sidebar-icon\"\n          >\n            <FontAwesomeIcon icon={faBars} />\n          </label>\n          <input\n            type=\"checkbox\"\n            hidden\n            className=\"sidebar-input\"\n            id=\"sidebar-checkbox\"\n          />\n          <label htmlFor=\"sidebar-checkbox\" className=\"overlay\"></label>\n          <Sidebar />\n          <div className=\"header__content--search box-shadow\">\n            <button className=\"search-icon\" onClick={this.search}>\n              <FontAwesomeIcon icon={faSearch} />\n            </button>\n            <input\n              type=\"text\"\n              className=\"search-input\"\n              placeholder=\"Tìm kiếm...\"\n              onChange={this.suggest}\n              ref={this.searchRef}\n              onKeyPress={this.onEnter}\n              onFocus={() =>\n                window.removeEventListener(\"keydown\", handleKeyboardEvent)\n              }\n              onBlur={() =>\n                window.addEventListener(\"keydown\", handleKeyboardEvent)\n              }\n            />\n            <div className=\"search-suggest box-shadow\">\n              <ul className=\"list-group list-group-flush\">\n                {suggestion[0] && suggestion[0].length ? (\n                  <React.Fragment>\n                    <li className=\"search-suggest__header\">Bài hát</li>\n                    {suggestion[0].map((song) => (\n                      <li\n                        className=\"list-song__item list-group-item\"\n                        key={song._id}\n                        onMouseDown={this.handleSelect}\n                        data-id={song._id}\n                        data-type=\"song\"\n                      >\n                        <div className=\"search-suggest__item\">\n                          <div\n                            className=\"search-suggest__item--img\"\n                            style={{\n                              backgroundImage: `url(${song.image})`,\n                            }}\n                          ></div>\n                          <p className=\"search-suggest__item--info\">\n                            {song.title}\n                          </p>\n                        </div>\n                      </li>\n                    ))}\n                  </React.Fragment>\n                ) : (\n                  \"\"\n                )}\n                {suggestion[1] && suggestion[1].length ? (\n                  <React.Fragment>\n                    <li className=\"search-suggest__header\">Playlist</li>\n                    {suggestion[1].map((playlist) => (\n                      <li\n                        className=\"list-song__item list-group-item\"\n                        key={playlist._id}\n                        onMouseDown={this.handleSelect}\n                        data-id={playlist._id}\n                        data-type=\"playlist\"\n                      >\n                        <div className=\"search-suggest__item\">\n                          <div\n                            className=\"search-suggest__item--img\"\n                            style={{\n                              backgroundImage: `url(${playlist.image})`,\n                            }}\n                          ></div>\n                          <p className=\"search-suggest__item--info\">\n                            {playlist.title}\n                          </p>\n                        </div>\n                      </li>\n                    ))}\n                  </React.Fragment>\n                ) : (\n                  \"\"\n                )}\n                {suggestion[2] && suggestion[2].length ? (\n                  <React.Fragment>\n                    <li className=\"search-suggest__header\">Nghệ sỹ</li>\n                    {suggestion[2].map((artist) => (\n                      <li\n                        className=\"list-song__item list-group-item\"\n                        key={artist._id}\n                        onMouseDown={this.handleSelect}\n                        data-id={artist._id}\n                        data-type=\"artist\"\n                      >\n                        <div className=\"search-suggest__item\">\n                          <div\n                            className=\"search-suggest__item--img rounded-circle\"\n                            style={{\n                              backgroundImage: `url(${artist.image})`,\n                            }}\n                          ></div>\n                          <p className=\"search-suggest__item--info\">\n                            {artist.name}\n                          </p>\n                        </div>\n                      </li>\n                    ))}\n                  </React.Fragment>\n                ) : (\n                  \"\"\n                )}\n              </ul>\n            </div>\n          </div>\n          <div className=\"header__content--auth\">\n            {user.userToken ? (\n              <DropdownButton\n                id=\"dropdown-auth\"\n                title={\n                  <div className=\"auth-link\">\n                    <FontAwesomeIcon\n                      icon={faUserCircle}\n                      className=\"user-circle-icon\"\n                    />\n                    <span className=\"ml-2 d-none d-xl-block\">\n                      {user.username}\n                    </span>\n                  </div>\n                }\n              >\n                <Dropdown.Item\n                  className=\"options-list__item\"\n                  onClick={() => this.setState({ showProfileModal: true })}\n                >\n                  <div className=\"option-list__item--icon\">\n                    <FontAwesomeIcon icon={faUser} />\n                  </div>\n                  <span>Thông tin</span>\n                </Dropdown.Item>\n                <Dropdown.Item\n                  className=\"options-list__item\"\n                  onClick={() => this.setState({ showLogoutModal: true })}\n                >\n                  <div className=\"option-list__item--icon\">\n                    <FontAwesomeIcon icon={faSignOutAlt} />\n                  </div>\n                  <span>Đăng xuất</span>\n                </Dropdown.Item>\n              </DropdownButton>\n            ) : (\n              <Link\n                to={{\n                  pathname: \"/login\",\n                  state: { prevPath: location.pathname },\n                }}\n                className=\"auth-link\"\n              >\n                <FontAwesomeIcon\n                  icon={faUserCircle}\n                  className=\"user-circle-icon\"\n                />\n                <span className=\"ml-2 d-none d-xl-block\">Đăng nhập</span>\n              </Link>\n            )}\n          </div>\n        </div>\n        <div className=\"header__banner\"></div>\n\n        {/* profile */}\n        <Modal\n          show={this.state.showProfileModal}\n          onHide={() => this.setState({ showProfileModal: false })}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton className=\"bg-light\">\n            <Modal.Title>Thông tin cá nhân</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"bg-light\">\n            {this.state.update ? (\n              <form action=\"true\" method=\"POST\" id=\"update-profile-form\">\n                <div\n                  className={`form-group ${\n                    this.state.usernameMessage ? \"api-invalid\" : \"\"\n                  }`}\n                >\n                  <label htmlFor=\"username\" className=\"form-label\">\n                    Tên đăng nhập\n                  </label>\n                  <input\n                    autoFocus\n                    defaultValue={user.username}\n                    id=\"username\"\n                    name=\"username\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    onBlur={(e) => {\n                      if (e.target.value !== user.username)\n                        this.checkExisted(e);\n                    }}\n                    onInput={() => this.setState({ usernameMessage: \"\" })}\n                  />\n                  <span className=\"form-message\" />\n                  <span className=\"api-message\">\n                    {this.state.usernameMessage}\n                  </span>\n                </div>\n                <div\n                  className={`form-group ${\n                    this.state.emailMessage ? \"api-invalid\" : \"\"\n                  }`}\n                >\n                  <label htmlFor=\"email\" className=\"form-label\">\n                    Email\n                  </label>\n                  <input\n                    defaultValue={user.email}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    onBlur={(e) => {\n                      if (e.target.value !== user.email) this.checkExisted(e);\n                    }}\n                    onInput={() => this.setState({ emailMessage: \"\" })}\n                  />\n                  <span className=\"form-message\" />\n                  <span className=\"api-message\">{this.state.emailMessage}</span>\n                </div>\n                <div\n                  className={`form-group ${\n                    this.state.passwordMessage ? \"api-invalid\" : \"\"\n                  }`}\n                >\n                  <label htmlFor=\"password\" className=\"form-label\">\n                    Mật khẩu\n                  </label>\n                  <input\n                    autoComplete=\"new-password\"\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Nhập mật khẩu để xác nhận\"\n                    className=\"form-control\"\n                    onChange={() => this.setState({ passwordMessage: \"\" })}\n                  />\n                  <span className=\"form-message\" />\n                  <span className=\"api-message\">\n                    {this.state.passwordMessage}\n                  </span>\n                </div>\n\n                <button className=\"form-submit\">Lưu thay đổi</button>\n              </form>\n            ) : (\n              <div>\n                <table className=\"table table-borderless\">\n                  <tbody>\n                    <tr>\n                      <th scope=\"row\">Tên đăng nhập:</th>\n                      <td>{user.username}</td>\n                    </tr>\n                    <tr>\n                      <th scope=\"row\">Email:</th>\n                      <td>{user.email}</td>\n                    </tr>\n                  </tbody>\n                </table>\n                <button\n                  className=\"form-submit\"\n                  onClick={() => this.setState({ update: true })}\n                >\n                  Cập nhật\n                </button>\n              </div>\n            )}\n          </Modal.Body>\n        </Modal>\n\n        {/* logout confirmation */}\n        <Modal\n          show={this.state.showLogoutModal}\n          onHide={() => this.setState({ showLogoutModal: false })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Đăng xuất</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Bạn có chắc chắn muốn đăng xuất?</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => this.setState({ showLogoutModal: false })}\n            >\n              Trở lại\n            </Button>\n            <Button variant=\"danger\" onClick={this.logout}>\n              Đăng xuất\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  suggestion: state.search.suggestion,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  setSuggestion: (suggestion) => dispatch(setSuggestion(suggestion)),\n  setLikedSongCount: (count) => dispatch(setLikedSongCount(count)),\n  setMyPlaylist: (playlists) => dispatch(setMyPlaylist(playlists)),\n  setMyPlaylistCount: (count) => dispatch(setMyPlaylistCount(count)),\n  setRecommendation: (songs) => dispatch(setRecommendation(songs)),\n});\n\nconst HeaderWithRouter = withRouter(Header);\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderWithRouter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setPlaylistDetail } from \"../../actions/playlistAction\";\nimport {\n  setListPlaying,\n  setCurrentIndex,\n  toggleRandom,\n} from \"../../actions/playerAction\";\nimport axios from \"axios\";\nimport toast from \"../../helpers/toast\";\nimport { DropdownButton } from \"react-bootstrap\";\nimport { faCaretSquareDown, faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport OptionsList from \"../general/OptionsList\";\nimport SongCard from \"../song/SongCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass PlaylistDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    const playlistId = this.props.match.params.id;\n    axios\n      .get(`/playlist/detail/${playlistId}`)\n      .then((res) => this.props.setPlaylistDetail(res.data))\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  playPlaylist = () => {\n    const listPlaying = this.props.playlistDetail.song;\n    this.props.setListPlaying(listPlaying);\n    this.props.setCurrentIndex(0);\n    if (this.props.isRandom) this.props.toggleRandom();\n  };\n\n  render() {\n    if (this.state.isLoading) return \"\";\n\n    const { title, own, image, song, area } = this.props.playlistDetail;\n\n    return (\n      <React.Fragment>\n        <div className=\"row section text-center text-lg-left\">\n          <div className=\"col-xl-3 col-lg-4 col-sm-5\">\n            <img src={image} alt=\"\" className=\"img-detail box-shadow\" />\n          </div>\n          <div className=\"col-xl-9 col-lg-8 col-sm-7\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg-8\">\n                <h3>{title}</h3>\n                <p>\n                  <b>Tạo bởi: </b>\n                  {own.username}\n                </p>\n                {area ? (\n                  <p>\n                    <b>Khu vực: </b>\n                    {area.name}\n                  </p>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <div className=\"col-lg-4 d-flex flex-column align-items-center\">\n                <button\n                  className=\"detail-btn btn btn-danger box-shadow\"\n                  onClick={this.playPlaylist}\n                >\n                  <FontAwesomeIcon icon={faPlay} />\n                  <span> PHÁT</span>\n                </button>\n\n                <DropdownButton\n                  className=\"box-shadow\"\n                  id=\"detail-dropdown-options\"\n                  drop=\"left\"\n                  title={\n                    <React.Fragment>\n                      <FontAwesomeIcon icon={faCaretSquareDown} />\n                      <span> LỰA CHỌN</span>\n                    </React.Fragment>\n                  }\n                >\n                  <OptionsList song={this.props.songDetail} copyLink />\n                </DropdownButton>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"heading\">\n            <div className=\"d-flex align-items-end justify-content-between\">\n              <h4 className=\"mb-0 p-2 rounded bg-light box-shadow\">\n                Danh sách bài hát\n              </h4>\n              <p className=\"p-2 rounded box-shadow\">{song.length} bài hát</p>\n            </div>\n            <hr />\n          </div>\n          <div className=\"row\">\n            {song.map((song) => (\n              <SongCard key={song._id} item={song} />\n            ))}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playlistDetail: state.playlist.playlistDetail,\n  isPlaying: state.player.isPlaying,\n  isRandom: state.player.isRandom,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPlaylistDetail: (playlist) => dispatch(setPlaylistDetail(playlist)),\n  setListPlaying: (playlist) => dispatch(setListPlaying(playlist)),\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  toggleRandom: () => dispatch(toggleRandom()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistDetail);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  setListPlaying,\n  setCurrentIndex,\n  playAudio,\n  toggleRandom,\n} from \"../../actions/playerAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisV, faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport OptionsList from \"../general/OptionsList\";\nimport { DropdownButton } from \"react-bootstrap\";\n\nclass PlaylistCard extends Component {\n  playPlaylist = () => {\n    const listPlaying = this.props.item.song;\n    this.props.setListPlaying(listPlaying);\n    this.props.setCurrentIndex(0);\n    if (this.props.isRandom) this.props.toggleRandom();\n  };\n\n  render() {\n    const { item } = this.props;\n    return (\n      <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 mt-3\">\n        <div className=\"card border-0 h-100\">\n          <div className=\"playlist-bar-1\" />\n          <div className=\"playlist-bar-2\" />\n          <div className=\"card-img box-shadow rounded\">\n            <Link to={`/playlist/detail/${item._id}`}>\n              <img\n                src={item.image}\n                className=\"card-img-custom card-img-top\"\n                alt=\"...\"\n              />\n            </Link>\n            <div>\n              <DropdownButton\n                className=\"btn-ellipsis\"\n                id=\"dropdown-options\"\n                drop=\"left\"\n                title={<FontAwesomeIcon icon={faEllipsisV} />}\n              >\n                <OptionsList playlist={item} editMyPlaylist deleteMyPlaylist info copyLink />\n              </DropdownButton>\n\n              <div className=\"card-img__overlay\">\n                <div className=\"btn-toggle-play\" onClick={this.playPlaylist}>\n                  <FontAwesomeIcon icon={faPlay} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body pl-0 pr-0\">\n            <h6 className=\"card-title\">\n              <Link to={`/song/detail/${item._id}`}>{item.title}</Link>\n            </h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isRandom: state.player.isRandom,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setListPlaying: (listPlaying) => dispatch(setListPlaying(listPlaying)),\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  playAudio: () => dispatch(playAudio()),\n  toggleRandom: () => dispatch(toggleRandom()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistCard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { setPlaylistArea } from \"../../actions/playlistAction\";\nimport MyPagination from \"../general/MyPagination\";\nimport PlaylistCard from \"../playlist/PlaylistCard\";\nimport Blank from \"../general/Blank\";\nimport { NUMBER_OF_ITEM_PER_PAGE } from \"../../constants/Config\";\nimport toast from \"../../helpers/toast\";\n\nclass ListPlaylist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pageNums: null,\n    };\n  }\n\n  componentDidMount() {\n    const { areaId } = this.props.match.params;\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n\n    function getPlaylistArea() {\n      return axios.get(`/playlist/${areaId}?page=${query.get(\"page\")}`);\n    }\n\n    function getCount() {\n      return axios.get(`/playlist/${areaId}/count`);\n    }\n\n    Promise.all([getPlaylistArea(), getCount()])\n      .then((results) => {\n        const playlistArea = results[0].data;\n        const count = results[1].data;\n        this.props.setPlaylistArea(playlistArea);\n        this.setState({\n          pageNums: Math.ceil(count / NUMBER_OF_ITEM_PER_PAGE),\n        });\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  render() {\n    if (this.state.isLoading || this.state.pageNums === null) return \"\";\n    const { playlistArea } = this.props;\n    if (playlistArea.length === 0) return <Blank />;\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          {playlistArea.map((playlist) => (\n            <PlaylistCard key={playlist._id} item={playlist} />\n          ))}\n        </div>\n        <MyPagination\n          pageNums={this.state.pageNums}\n          history={this.props.history}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playlistArea: state.playlist.playlistArea,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPlaylistArea: (playlists) => dispatch(setPlaylistArea(playlists)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPlaylist);\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport ListPlaylist from \"./ListPlayList\";\n\nclass Playlists extends Component {\n  render() {\n    const { areas } = this.props;\n    return (\n      <React.Fragment>\n        <Route path=\"/playlist/:areaId\">\n          {({ match, history }) => {\n            const { areaId } = match ? match.params : {};\n\n            return (\n              <Tabs\n                activeKey={areaId}\n                onSelect={(nextTab) => history.replace(nextTab)}\n              >\n                {areas.map((area) => (\n                  <Tab eventKey={area._id} title={area.name} key={area._id}>\n                    <div className=\"mt-4 mb-4\">\n                      {areaId === area._id ? (\n                        <ListPlaylist match={match} history={history} />\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </Tab>\n                ))}\n              </Tabs>\n            );\n          }}\n        </Route>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  areas: state.area,\n});\n\nexport default connect(mapStateToProps)(Playlists);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setSongDetail } from \"../../actions/songAction\";\nimport {\n  setListPlaying,\n  setCurrentIndex,\n  playAudio,\n} from \"../../actions/playerAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCaretSquareDown,\n  faPause,\n  faPlay,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport toast from \"../../helpers/toast\";\nimport { DropdownButton } from \"react-bootstrap\";\nimport OptionsList from \"../general/OptionsList\";\nimport Recommendation from \"../user/Recommendation\";\n\nclass SongDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      showMore: false,\n    };\n    this.collapseRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const songId = this.props.match.params.id;\n    axios\n      .get(`/song/detail/${songId}`)\n      .then((res) => this.props.setSongDetail(res.data))\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  playAudio = () => {\n    const { currentSongId, songDetail } = this.props;\n    if (currentSongId !== songDetail._id) {\n      const playlist = [this.props.songDetail];\n      this.props.setListPlaying(playlist);\n      this.props.setCurrentIndex(0);\n    } else {\n      document.getElementById(\"player-audio\").play();\n    }\n  };\n\n  collapse = () => {\n    this.setState({ showMore: !this.state.showMore });\n    this.collapseRef.current.classList.toggle(\n      \"partially-hidden\",\n      this.state.showMore\n    );\n  };\n\n  render() {\n    if (this.state.isLoading) return \"\";\n\n    const { _id, title, artist, image, lyrics, category, playing } =\n      this.props.songDetail;\n    const { currentSongId, isPlaying, user } = this.props;\n    const { showMore } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"row section text-center text-lg-left\">\n          <div className=\"col-xl-3 col-lg-4 col-sm-5\">\n            <img src={image} alt=\"\" className=\"img-detail box-shadow\" />\n          </div>\n          <div className=\"col-xl-9 col-lg-8 col-sm-7\">\n            <div className=\"row pt-5\">\n              <div className=\"col-lg-8\">\n                <h3>{title}</h3>\n                <h6 className=\"font-weight-normal\">\n                  {artist.map((artist, index) => (\n                    <Link to={`/artist/detail/${artist._id}`} key={artist._id}>\n                      {index > 0 && \", \"}\n                      {artist.name}\n                    </Link>\n                  ))}\n                </h6>\n                <p className=\"mt-4\">\n                  <b>Thể loại: </b>\n                  {category.name}\n                </p>\n                <p className=\"mt-2 mb-2\">\n                  <b>Lượt nghe: </b>\n                  {`${Number(playing / 1000).toFixed(2)}K`}\n                </p>\n              </div>\n              <div className=\"col-lg-4 d-flex flex-column align-items-center\">\n                {currentSongId !== _id || !isPlaying ? (\n                  <button\n                    className=\"detail-btn btn btn-danger box-shadow\"\n                    onClick={this.playAudio}\n                  >\n                    <FontAwesomeIcon icon={faPlay} />\n                    <span> PHÁT</span>\n                  </button>\n                ) : (\n                  <button\n                    className=\"detail-btn btn btn-secondary box-shadow\"\n                    onClick={() =>\n                      document.getElementById(\"player-audio\").pause()\n                    }\n                  >\n                    <FontAwesomeIcon icon={faPause} />\n                    <span> TẠM DỪNG</span>\n                  </button>\n                )}\n                <DropdownButton\n                  className=\"box-shadow\"\n                  id=\"detail-dropdown-options\"\n                  drop=\"left\"\n                  title={\n                    <React.Fragment>\n                      <FontAwesomeIcon icon={faCaretSquareDown} />\n                      <span> LỰA CHỌN</span>\n                    </React.Fragment>\n                  }\n                >\n                  <OptionsList\n                    song={this.props.songDetail}\n                    like\n                    addToPlaylist\n                    playNext\n                    playLast\n                    copyLink\n                    download\n                  />\n                </DropdownButton>\n              </div>\n            </div>\n          </div>\n        </div>\n        {lyrics ? (\n          <div className=\"lyrics box-shadow section\">\n            <div className=\"lyrics__header\">Lời bài hát</div>\n            <hr />\n            <div\n              className=\"lyrics__content partially-hidden\"\n              ref={this.collapseRef}\n              dangerouslySetInnerHTML={{ __html: lyrics }}\n            ></div>\n            <span className=\"lyrics__collapse\" onClick={this.collapse}>\n              {showMore ? \"Ẩn bớt\" : \"Xem thêm\"}\n            </span>\n          </div>\n        ) : (\n          <div className=\"lyrics box-shadow section\">\n            <div className=\"lyrics__header\">Chưa có lời cho bài hát này</div>\n          </div>\n        )}\n        {user.userToken ? <Recommendation /> : \"\"}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isPlaying: state.player.isPlaying,\n  songDetail: state.song.songDetail,\n  currentSongId: state.player.currentSongId,\n  user: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSongDetail: (song) => dispatch(setSongDetail(song)),\n  setListPlaying: (playlist) => dispatch(setListPlaying(playlist)),\n  setCurrentIndex: (newIndex) => dispatch(setCurrentIndex(newIndex)),\n  playAudio: () => dispatch(playAudio()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongDetail);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { setSongCategory } from \"../../actions/songAction\";\nimport SongCard from \"./SongCard\";\nimport MyPagination from \"../general/MyPagination\";\nimport Blank from \"../general/Blank\";\nimport { NUMBER_OF_ITEM_PER_PAGE } from \"../../constants/Config\";\nimport toast from \"../../helpers/toast\";\n\nclass ListSong extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pageNums: null,\n    };\n  }\n\n  componentDidMount() {\n    const { areaId } = this.props.match.params;\n    const { categoryId } = this.props.match.params;\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n\n    function getSongCategory() {\n      return axios.get(\n        `/song/${areaId}/${categoryId}?page=${query.get(\"page\")}`\n      );\n    }\n\n    function getCount() {\n      return axios.get(`/song/${areaId}/${categoryId}/count`);\n    }\n\n    Promise.all([getSongCategory(), getCount()])\n      .then((results) => {\n        const songCategory = results[0].data;\n        const count = results[1].data;\n        this.props.setSongCategory(songCategory);\n        this.setState({\n          pageNums: Math.ceil(count / NUMBER_OF_ITEM_PER_PAGE),\n        });\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  render() {\n    if (this.state.isLoading || this.state.pageNums === null) return \"\";\n    const { songCategory } = this.props;\n    if (songCategory.length === 0) return <Blank />;\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          {songCategory.map((song) => (\n            <SongCard key={song._id} item={song} />\n          ))}\n        </div>\n        <MyPagination\n          pageNums={this.state.pageNums}\n          history={this.props.history}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  songCategory: state.song.songCategory,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSongCategory: (songs) => dispatch(setSongCategory(songs)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListSong);\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport ListSong from \"./ListSong\";\n\nclass Playlists extends Component {\n  render() {\n    const { areas } = this.props;\n    return (\n      <React.Fragment>\n        <Route path=\"/song/:areaId/:categoryId\">\n          {({ match, history }) => {\n            const { areaId } = match ? match.params : {};\n            const { categoryId } = match ? match.params : {};\n\n            return (\n              <Tabs\n                activeKey={areaId}\n                onSelect={(nextTab) => {\n                  let category = \"\";\n                  switch (nextTab) {\n                    case areas[0]._id:\n                      category = areas[0].category[0]._id;\n                      break;\n                    case areas[1]._id:\n                      category = areas[1].category[0]._id;\n                      break;\n                    case areas[2]._id:\n                      category = areas[2].category[0]._id;\n                      break;\n                    case areas[3]._id:\n                      category = areas[3].category[0]._id;\n                      break;\n                    default:\n                      break;\n                  }\n                  return history.replace(`/song/${nextTab}/${category}`);\n                }}\n              >\n                {areas.map((area) => (\n                  <Tab eventKey={area._id} title={area.name} key={area._id}>\n                    <div className=\"category-tab mt-3 mb-3\">\n                      <Tabs\n                        activeKey={categoryId}\n                        onSelect={(nextTab) => history.replace(nextTab)}\n                      >\n                        {area.category.map((category) => (\n                          <Tab\n                            eventKey={category._id}\n                            title={category.name}\n                            key={category._id}\n                          >\n                            <div className=\"mt-4 mb-4\">\n                              {categoryId === category._id ? (\n                                <ListSong match={match} history={history} />\n                              ) : (\n                                \"\"\n                              )}\n                            </div>\n                          </Tab>\n                        ))}\n                      </Tabs>\n                    </div>\n                  </Tab>\n                ))}\n              </Tabs>\n            );\n          }}\n        </Route>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  areas: state.area,\n});\n\nexport default connect(mapStateToProps)(Playlists);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"../../actions/userAction\";\nimport axios from \"axios\";\nimport Validator from \"../../helpers/validator\";\nimport { setLikedSongCount, setRecommendation } from \"../../actions/songAction\";\nimport { setMyPlaylistCount } from \"../../actions/playlistAction\";\nimport toast from \"../../helpers/toast\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameMessage: \"\",\n      passwordMessage: \"\",\n    };\n  }\n  componentDidMount() {\n    Validator({\n      form: \"#login-form\",\n      formGroupSelector: \".form-group\",\n      errorSelector: \".form-message\",\n      rules: [\n        Validator.isRequired(\"#username\"),\n        Validator.isRequired(\"#password\"),\n        Validator.minLength(\"#username\", 4),\n        Validator.minLength(\"#password\", 6),\n      ],\n      onSubmit: (data) => {\n        axios\n          .post(\"/user/login\", data)\n          .then((res) => {\n            const user = res.data;\n            this.props.setCurrentUser(user);\n\n            function getRecommendation() {\n              return axios.get(`/user/${user.userId}/recommend`, {\n                headers: {\n                  Authorization: `Bearer ${user.userToken}`,\n                },\n              });\n            }\n            function getLikedSongCount() {\n              return axios.get(`/user/${user.userId}/liked-song/count`, {\n                headers: {\n                  Authorization: `Bearer ${user.userToken}`,\n                },\n              });\n            }\n            function getMyPlaylistCount() {\n              return axios.get(`/user/${user.userId}/my-playlist/count`, {\n                headers: {\n                  Authorization: `Bearer ${user.userToken}`,\n                },\n              });\n            }\n\n            Promise.all([\n              getRecommendation(),\n              getLikedSongCount(),\n              getMyPlaylistCount(),\n            ])\n              .then((result) => {\n                if (result[0].data)\n                  this.props.setRecommendation(result[0].data);\n                this.props.setLikedSongCount(result[1].data);\n                this.props.setMyPlaylistCount(result[2].data);\n              })\n              .catch(console.log);\n          })\n          .then(() => {\n            const nextPath = this.props.location.state\n              ? this.props.location.state.prevPath\n              : \"/\";\n            this.props.history.replace(nextPath);\n            toast({\n              title: \"Thành công!\",\n              message: \"Bạn đã đăng nhập thành công!\",\n              type: \"success\",\n            });\n          })\n          .catch((error) => {\n            const errorData = error.response.data;\n            if (errorData.field === \"username\")\n              this.setState({ usernameMessage: errorData.message });\n            if (errorData.field === \"password\")\n              this.setState({ passwordMessage: errorData.message });\n          });\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"auth\">\n        <form\n          action=\"true\"\n          method=\"POST\"\n          className=\"form box-shadow\"\n          id=\"login-form\"\n        >\n          <div className=\"d-flex align-items-center justify-content-around\">\n            <h3 className=\"heading\">Đăng nhập</h3>\n            <Link to=\"/\">\n              <img src={\"/images/logos/logo.svg\"} alt=\"logo-app\" />\n            </Link>\n          </div>\n          <div className=\"spacer\" />\n          <div\n            className={`form-group ${\n              this.state.usernameMessage ? \"api-invalid\" : \"\"\n            }`}\n          >\n            <label htmlFor=\"username\" className=\"form-label\">\n              Tên đăng nhập\n            </label>\n            <input\n              autoFocus\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Nhập tên đăng nhập\"\n              className=\"form-control\"\n              onChange={() => this.setState({ usernameMessage: \"\" })}\n            />\n            <span className=\"form-message\" />\n            <span className=\"api-message\">{this.state.usernameMessage}</span>\n          </div>\n          <div\n            className={`form-group ${\n              this.state.passwordMessage ? \"api-invalid\" : \"\"\n            }`}\n          >\n            <label htmlFor=\"password\" className=\"form-label\">\n              Mật khẩu\n            </label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Nhập mật khẩu\"\n              className=\"form-control\"\n              onChange={() => this.setState({ passwordMessage: \"\" })}\n            />\n            <span className=\"form-message\" />\n            <span className=\"api-message\">{this.state.passwordMessage}</span>\n          </div>\n          <button className=\"form-submit\">Đăng nhập</button>\n          <div className=\"d-flex justify-content-between mt-3\">\n            <Link to=\"/forgot-password\" className=\"auth__options text-info\">\n              Quên mật khẩu?\n            </Link>\n            <Link to=\"/register\" className=\"auth__options text-info\">\n              Đăng ký ngay!\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  setLikedSongCount: (count) => dispatch(setLikedSongCount(count)),\n  setMyPlaylistCount: (count) => dispatch(setMyPlaylistCount(count)),\n  setRecommendation: (songs) => dispatch(setRecommendation(songs)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"../../actions/userAction\";\nimport axios from \"axios\";\nimport Validator from \"../../helpers/validator\";\nimport toast from \"../../helpers/toast\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usernameMessage: \"\",\n      emailMessage: \"\",\n    };\n  }\n  componentDidMount() {\n    Validator({\n      form: \"#register-form\",\n      formGroupSelector: \".form-group\",\n      errorSelector: \".form-message\",\n      rules: [\n        Validator.isRequired(\"#username\"),\n        Validator.isRequired(\"#email\"),\n        Validator.isRequired(\"#password\"),\n        Validator.isRequired(\"#password_confirmation\"),\n        Validator.minLength(\"#username\", 4),\n        Validator.isEmail(\"#email\"),\n        Validator.minLength(\"#password\", 6),\n        Validator.isConfirmed(\n          \"#password_confirmation\",\n          () => document.querySelector(\"#register-form #password\").value,\n          \"Mật khẩu nhập lại không chính xác\"\n        ),\n      ],\n      onSubmit: (data) => {\n        delete data.password_confirmation;\n        if (!this.state.usernameMessage && !this.state.emailMessage) {\n          axios\n            .post(\"/user/register\", data)\n            .then((res) => {\n              const user = res.data;\n              this.props.setCurrentUser(user);\n              this.props.history.replace(\"/\");\n              toast({\n                title: \"Thành công!\",\n                message: \"Bạn đã đăng ký thành công!\",\n                type: \"success\",\n              });\n            })\n            .catch((error) =>\n              toast({\n                title: \"Thất bại!\",\n                message: `${\n                  error.response\n                    ? error.response.data.message\n                    : \"Có lỗi xảy ra!\"\n                }`,\n                type: \"error\",\n              })\n            );\n        }\n      },\n    });\n  }\n\n  checkExisted = (e) => {\n    let data = {};\n    data[e.target.name] = e.target.value;\n    axios\n      .post(\"/user/register/existed\", data)\n      .then((res) => {\n        const result = res.data;\n        if (result.field === \"username\")\n          this.setState({ usernameMessage: result.message });\n        if (result.field === \"email\")\n          this.setState({ emailMessage: result.message });\n      })\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  render() {\n    return (\n      <div className=\"auth\">\n        <form\n          action=\"true\"\n          method=\"POST\"\n          className=\"form box-shadow\"\n          id=\"register-form\"\n        >\n          <div className=\"d-flex align-items-center justify-content-around\">\n            <h3 className=\"heading\">Đăng ký</h3>\n            <Link to=\"/\">\n              <img src={\"/images/logos/logo.svg\"} alt=\"logo-app\" />\n            </Link>\n          </div>\n          <div className=\"spacer\" />\n          <div\n            className={`form-group ${\n              this.state.usernameMessage ? \"api-invalid\" : \"\"\n            }`}\n          >\n            <label htmlFor=\"username\" className=\"form-label\">\n              Tên đăng nhập\n            </label>\n            <input\n              autoFocus\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Nhập tên đăng nhập\"\n              className=\"form-control\"\n              onBlur={this.checkExisted}\n              onInput={() => this.setState({ usernameMessage: \"\" })}\n            />\n            <span className=\"form-message\" />\n            <span className=\"api-message\">{this.state.usernameMessage}</span>\n          </div>\n          <div\n            className={`form-group ${\n              this.state.emailMessage ? \"api-invalid\" : \"\"\n            }`}\n          >\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email\n            </label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"VD: email@domain.com\"\n              className=\"form-control\"\n              onBlur={this.checkExisted}\n              onInput={() => this.setState({ emailMessage: \"\" })}\n            />\n            <span className=\"form-message\" />\n            <span className=\"api-message\">{this.state.emailMessage}</span>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Mật khẩu\n            </label>\n            <input\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Nhập mật khẩu\"\n              className=\"form-control\"\n            />\n            <span className=\"form-message\" />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password_confirmation\" className=\"form-label\">\n              Nhập lại mật khẩu\n            </label>\n            <input\n              id=\"password_confirmation\"\n              name=\"password_confirmation\"\n              placeholder=\"Nhập lại mật khẩu\"\n              type=\"password\"\n              className=\"form-control\"\n            />\n            <span className=\"form-message\" />\n          </div>\n          <button className=\"form-submit\">Đăng ký</button>\n          <div className=\"d-flex justify-content-center mt-3\">\n            <span className=\"auth__options\">Đã có tài khoản?</span>\n            <Link to=\"/login\" className=\"auth__options ml-2 text-info\">\n              Đăng nhập ngay!\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(Register);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Validator from \"../../helpers/validator\";\nimport toast from \"../../helpers/toast\";\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailMessage: \"\",\n      isSended: false,\n      email: \"\",\n    };\n  }\n  componentDidMount() {\n    Validator({\n      form: \"#forgot-password-form\",\n      formGroupSelector: \".form-group\",\n      errorSelector: \".form-message\",\n      rules: [Validator.isRequired(\"#email\"), Validator.isEmail(\"#email\")],\n      onSubmit: (data) => {\n        if (!this.state.emailMessage) {\n          this.setState({ email: data.email });\n          axios\n            .post(\"/user/forgot-password\", data)\n            .then(() => {\n              this.setState({ isSended: true });\n            })\n            .catch((error) =>\n              toast({\n                title: \"Thất bại!\",\n                message: `${\n                  error.response\n                    ? error.response.data.message\n                    : \"Có lỗi xảy ra!\"\n                }`,\n                type: \"error\",\n              })\n            );\n        }\n      },\n    });\n  }\n\n  checkExisted = (e) => {\n    let data = {};\n    const emailFormMessage = document.querySelector(\n      \"input#email + span.form-message\"\n    ).innerText;\n    if (!emailFormMessage) data[e.target.name] = e.target.value;\n    axios\n      .post(\"/user/register/existed\", data)\n      .then((res) => {\n        const result = res.data;\n        if (!result.message)\n          this.setState({\n            emailMessage: \"Email không khớp với bất kỳ tài khoản nào!\",\n          });\n      })\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  render() {\n    return (\n      <div className=\"auth\">\n        {this.state.isSended ? (\n          <form className=\"form box-shadow\">\n            <div className=\"d-flex align-items-center justify-content-around\">\n              <h3 className=\"heading\">Kiểm tra email</h3>\n              <Link to=\"/\">\n                <img src={\"/images/logos/logo.svg\"} alt=\"logo-app\" />\n              </Link>\n            </div>\n            <div className=\"spacer\" />\n            <div className=\"p-4 bg-light\">\n              <span>\n                Chúng tôi đã gửi yêu cầu khôi phục mật khẩu tới{\" \"}\n                <b>{this.state.email}</b>. Vui lòng kiểm tra email và làm theo\n                hướng dẫn.\n              </span>\n            </div>\n            <div className=\"mt-5\">\n              <Link to=\"/\" className=\"form-submit\">\n                Quay về trang chủ\n              </Link>\n            </div>\n          </form>\n        ) : (\n          <form\n            action=\"true\"\n            method=\"POST\"\n            className=\"form box-shadow\"\n            id=\"forgot-password-form\"\n          >\n            <div className=\"d-flex align-items-center justify-content-around\">\n              <h3 className=\"heading\">Khôi phục mật khẩu</h3>\n              <Link to=\"/\">\n                <img src={\"/images/logos/logo.svg\"} alt=\"logo-app\" />\n              </Link>\n            </div>\n            <div className=\"spacer\" />\n            <div\n              className={`form-group ${\n                this.state.emailMessage ? \"api-invalid\" : \"\"\n              }`}\n            >\n              <label htmlFor=\"email\" className=\"form-label\">\n                Email đăng ký tài khoản\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"VD: email@domain.com\"\n                className=\"form-control\"\n                onBlur={this.checkExisted}\n                onInput={() => this.setState({ emailMessage: \"\" })}\n              />\n              <span className=\"form-message\" />\n              <span className=\"api-message\">{this.state.emailMessage}</span>\n            </div>\n            <button className=\"form-submit\">Khôi phục mật khẩu</button>\n            <div className=\"d-flex justify-content-center mt-3\">\n              <Link to=\"/login\" className=\"auth__options text-info\">\n                Đăng nhập\n              </Link>\n            </div>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ForgotPassword;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Validator from \"../../helpers/validator\";\nimport toast from \"../../helpers/toast\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSuccessed: false,\n    };\n  }\n  componentDidMount() {\n    const resettoken = this.props.match.params.token;\n    Validator({\n      form: \"#reset-password-form\",\n      formGroupSelector: \".form-group\",\n      errorSelector: \".form-message\",\n      rules: [\n        Validator.isRequired(\"#password\"),\n        Validator.isRequired(\"#password_confirmation\"),\n        Validator.minLength(\"#password\", 6),\n        Validator.isConfirmed(\n          \"#password_confirmation\",\n          () => document.querySelector(\"#reset-password-form #password\").value,\n          \"Mật khẩu nhập lại không chính xác\"\n        ),\n      ],\n      onSubmit: (data) => {\n        delete data.password_confirmation;\n        data.resettoken = resettoken;\n        axios\n          .post(\"/user/reset-password\", data)\n          .then(() => {\n            this.setState({ isSuccessed: true });\n          })\n          .catch((error) =>\n            toast({\n              title: \"Thất bại!\",\n              message: `${\n                error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n              }`,\n              type: \"error\",\n            })\n          );\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"auth\">\n        {this.state.isSuccessed ? (\n          <form className=\"form box-shadow\">\n            <div className=\"d-flex align-items-center justify-content-around\">\n              <h3 className=\"heading\">Cập nhật mật khẩu</h3>\n              <Link to=\"/\">\n                <img src={\"/images/logos/logo.svg\"} alt=\"logo-app\" />\n              </Link>\n            </div>\n            <div className=\"spacer\" />\n            <div className=\"p-4 bg-light\">\n              <span>\n                Bạn đã thay đổi mật khẩu thành công. Hãy đăng nhập ngay để có\n                trải nghiệm tốt nhất tại MusicRS!\n              </span>\n            </div>\n            <div className=\"mt-5\">\n              <Link to=\"/login\" className=\"form-submit\">\n                Đăng nhập\n              </Link>\n            </div>\n          </form>\n        ) : (\n          <form\n            action=\"true\"\n            method=\"POST\"\n            className=\"form box-shadow\"\n            id=\"reset-password-form\"\n          >\n            <div className=\"d-flex align-items-center justify-content-around\">\n              <h3 className=\"heading\">Thay đổi mật khẩu</h3>\n              <Link to=\"/\">\n                <img src={\"/images/logos/logo.svg\"} alt=\"logo-app\" />\n              </Link>\n            </div>\n            <div className=\"spacer\" />\n            <div className=\"form-group\">\n              <label htmlFor=\"password\" className=\"form-label\">\n                Mật khẩu\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Nhập mật khẩu\"\n                className=\"form-control\"\n              />\n              <span className=\"form-message\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password_confirmation\" className=\"form-label\">\n                Nhập lại mật khẩu\n              </label>\n              <input\n                id=\"password_confirmation\"\n                name=\"password_confirmation\"\n                placeholder=\"Nhập lại mật khẩu\"\n                type=\"password\"\n                className=\"form-control\"\n              />\n              <span className=\"form-message\" />\n            </div>\n            <button className=\"form-submit\">Tạo mật khẩu</button>\n          </form>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport MyPagination from \"../general/MyPagination\";\nimport SongCard from \"../song/SongCard\";\nimport { setResult } from \"../../actions/searchAction\";\nimport Blank from \"../general/Blank\";\nimport { NUMBER_OF_ITEM_PER_PAGE } from \"../../constants/Config\";\nimport toast from \"../../helpers/toast\";\n\nclass SearchSong extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pageNums: null,\n    };\n  }\n\n  componentDidMount() {\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n\n    function getSearchSong() {\n      return axios.get(\n        `/search/song?q=${query.get(\"q\")}&page=${query.get(\"page\")}`\n      );\n    }\n\n    function getCount() {\n      return axios.get(`/search/count/song?q=${query.get(\"q\")}`);\n    }\n\n    Promise.all([getSearchSong(), getCount()])\n      .then((results) => {\n        const searchSong = results[0].data;\n        const count = results[1].data;\n        this.props.setResult(searchSong);\n        this.setState({\n          pageNums: Math.ceil(count / NUMBER_OF_ITEM_PER_PAGE),\n        });\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  render() {\n    if (this.state.isLoading || this.state.pageNums === null) return \"\";\n    const { result } = this.props;\n    if (result.length === 0) return <Blank />;\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          {result.map((item) => (\n            <SongCard key={item._id} item={item} />\n          ))}\n        </div>\n        <MyPagination\n          pageNums={this.state.pageNums}\n          history={this.props.history}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  result: state.search.result,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setResult: (result) => dispatch(setResult(result)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchSong);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport MyPagination from \"../general/MyPagination\";\nimport PlaylistCard from \"../playlist/PlaylistCard\";\nimport { setResult } from \"../../actions/searchAction\";\nimport Blank from \"../general/Blank\";\nimport { NUMBER_OF_ITEM_PER_PAGE } from \"../../constants/Config\";\nimport toast from \"../../helpers/toast\";\n\nclass SearchPlaylist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pageNums: null,\n    };\n  }\n\n  componentDidMount() {\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n\n    function getSearchPlaylist() {\n      return axios.get(\n        `/search/playlist?q=${query.get(\"q\")}&page=${query.get(\"page\")}`\n      );\n    }\n\n    function getCount() {\n      return axios.get(`/search/count/playlist?q=${query.get(\"q\")}`);\n    }\n\n    Promise.all([getSearchPlaylist(), getCount()])\n      .then((results) => {\n        const searchPlaylist = results[0].data;\n        const count = results[1].data;\n        this.props.setResult(searchPlaylist);\n        this.setState({\n          pageNums: Math.ceil(count / NUMBER_OF_ITEM_PER_PAGE),\n        });\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  render() {\n    if (this.state.isLoading || this.state.pageNums === null) return \"\";\n    const { result } = this.props;\n    if (result.length === 0) return <Blank />;\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          {result.map((item) => (\n            <PlaylistCard key={item._id} item={item} />\n          ))}\n        </div>\n        <MyPagination\n          pageNums={this.state.pageNums}\n          history={this.props.history}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  result: state.search.result,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setResult: (result) => dispatch(setResult(result)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPlaylist);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport MyPagination from \"../general/MyPagination\";\nimport { setResult } from \"../../actions/searchAction\";\nimport ArtistCard from \"../artist/ArtistCard\";\nimport Blank from \"../general/Blank\";\nimport { NUMBER_OF_ITEM_PER_PAGE } from \"../../constants/Config\";\nimport toast from \"../../helpers/toast\";\n\nclass SearchArtist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pageNums: null,\n    };\n  }\n\n  componentDidMount() {\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n\n    function getSearchArtist() {\n      return axios.get(\n        `/search/artist?q=${query.get(\"q\")}&page=${query.get(\"page\")}`\n      );\n    }\n\n    function getCount() {\n      return axios.get(`/search/count/artist?q=${query.get(\"q\")}`);\n    }\n\n    Promise.all([getSearchArtist(), getCount()])\n      .then((results) => {\n        const searchArtist = results[0].data;\n        const count = results[1].data;\n        this.props.setResult(searchArtist);\n        this.setState({\n          pageNums: Math.ceil(count / NUMBER_OF_ITEM_PER_PAGE),\n        });\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  }\n\n  render() {\n    if (this.state.isLoading || this.state.pageNums === null) return \"\";\n    const { result } = this.props;\n    if (result.length === 0) return <Blank />;\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          {result.map((item) => (\n            <ArtistCard key={item._id} item={item} />\n          ))}\n        </div>\n        <MyPagination\n          pageNums={this.state.pageNums}\n          history={this.props.history}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  result: state.search.result,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setResult: (result) => dispatch(setResult(result)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchArtist);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { Route } from \"react-router-dom\";\nimport SearchSong from \"./SearchSong\";\nimport SearchPlaylist from \"./SearchPlaylist\";\nimport SearchArtist from \"./SearchArtist\";\n\nexport class SearchTabs extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Route path=\"/search/:type\">\n          {({ match, history }) => {\n            const { type } = match ? match.params : {};\n            const { search } = this.props.history.location;\n            const query = new URLSearchParams(search);\n\n            return (\n              <Tabs\n                activeKey={type}\n                onSelect={(nextTab) =>\n                  history.replace(`${nextTab}?q=${query.get(\"q\")}`)\n                }\n              >\n                <Tab eventKey=\"song\" title=\"Bài hát\">\n                  <div className=\"mt-4 mb-4\">\n                    {type === \"song\" ? <SearchSong history={history} /> : \"\"}\n                  </div>\n                </Tab>\n                <Tab eventKey=\"playlist\" title=\"Playlist\">\n                  <div className=\"mt-4 mb-4\">\n                    {type === \"playlist\" ? (\n                      <SearchPlaylist history={history} />\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                </Tab>\n                <Tab eventKey=\"artist\" title=\"Nghệ sĩ\">\n                  <div className=\"mt-4 mb-4\">\n                    {type === \"artist\" ? (\n                      <SearchArtist history={history} />\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                </Tab>\n              </Tabs>\n            );\n          }}\n        </Route>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(null, mapDispatchToProps)(SearchTabs);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport SongCard from \"../song/SongCard\";\nimport MyPagination from \"../general/MyPagination\";\nimport Blank from \"../general/Blank\";\nimport { NUMBER_OF_ITEM_PER_PAGE } from \"../../constants/Config\";\nimport toast from \"../../helpers/toast\";\n\nclass LikedSong extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pageNums: null,\n      count: null,\n      likedSong: [],\n    };\n  }\n\n  getLikedSong = () => {\n    const { user } = this.props;\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n\n    function getLikedSong() {\n      return axios.get(\n        `/user/${user.userId}/liked-song?page=${query.get(\"page\")}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user.userToken}`,\n          },\n        }\n      );\n    }\n\n    function getCount() {\n      return axios.get(`/user/${user.userId}/liked-song/count`, {\n        headers: {\n          Authorization: `Bearer ${user.userToken}`,\n        },\n      });\n    }\n\n    Promise.all([getLikedSong(), getCount()])\n      .then((results) => {\n        const likedSong = results[0].data;\n        const count = results[1].data;\n        this.setState({\n          likedSong,\n          pageNums: Math.ceil(count / NUMBER_OF_ITEM_PER_PAGE),\n          count,\n        });\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  componentDidMount() {\n    this.getLikedSong();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.likedSongCount !== this.props.likedSongCount)\n      this.getLikedSong();\n  }\n\n  render() {\n    if (this.state.isLoading || this.state.pageNums === null) return \"\";\n    const { likedSong } = this.state;\n\n    return (\n      <div className=\"section\">\n        <div className=\"heading\">\n          <div className=\"d-flex align-items-end justify-content-between\">\n            <h4 className=\"mb-0 p-2 rounded bg-light box-shadow\">\n              Bài hát yêu thích\n            </h4>\n            <p className=\"p-2 rounded bg-light box-shadow\">\n              {this.state.count} bài hát\n            </p>\n          </div>\n          <hr />\n        </div>\n        {likedSong.length === 0 ? (\n          <Blank />\n        ) : (\n          <React.Fragment>\n            <div className=\"row\">\n              {likedSong.map((song) => (\n                <SongCard key={song._id} item={song} />\n              ))}\n            </div>\n            <MyPagination\n              pageNums={this.state.pageNums}\n              history={this.props.history}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  likedSongCount: state.song.likedSongCount,\n});\n\nexport default connect(mapStateToProps)(LikedSong);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  setMyPlaylist,\n  setMyPlaylistCount,\n} from \"../../actions/playlistAction\";\nimport PlaylistCard from \"../playlist/PlaylistCard\";\nimport MyPagination from \"../general/MyPagination\";\nimport Blank from \"../general/Blank\";\nimport { NUMBER_OF_ITEM_PER_PAGE } from \"../../constants/Config\";\nimport toast from \"../../helpers/toast\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Modal } from \"react-bootstrap\";\nimport handleKeyboardEvent from \"../../helpers/handleKeyboardEvent\";\n\nclass MyPlaylist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      pageNums: null,\n      count: null,\n      showCreatePlaylist: false,\n    };\n  }\n\n  getMyPlaylist = () => {\n    const { user } = this.props;\n    const { search } = this.props.history.location;\n    const query = new URLSearchParams(search);\n\n    function getPlaylist() {\n      return axios.get(\n        `/user/${user.userId}/my-playlist?page=${query.get(\"page\")}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user.userToken}`,\n          },\n        }\n      );\n    }\n\n    function getCount() {\n      return axios.get(`/user/${user.userId}/my-playlist/count`, {\n        headers: {\n          Authorization: `Bearer ${user.userToken}`,\n        },\n      });\n    }\n\n    Promise.all([getPlaylist(), getCount()])\n      .then((results) => {\n        const myPlaylist = results[0].data;\n        const count = results[1].data;\n        this.props.setMyPlaylist(myPlaylist);\n        this.setState({\n          pageNums: Math.ceil(count / NUMBER_OF_ITEM_PER_PAGE),\n          count,\n        });\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n  };\n\n  componentDidMount() {\n    this.getMyPlaylist();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.myPlaylistCount !== this.props.myPlaylistCount)\n      this.getMyPlaylist();\n  }\n\n  createPlaylist = (e) => {\n    e.preventDefault();\n    const { user } = this.props;\n    const data = { [e.target[0].name]: e.target[0].value };\n    if (data.title === \"\")\n      toast({\n        title: \"Thất bại!\",\n        message: \"Tên playlist không được rỗng!\",\n        type: \"error\",\n      });\n    else {\n      axios\n        .post(`/user/${user.userId}/my-playlist/create`, data, {\n          headers: {\n            Authorization: `Bearer ${user.userToken}`,\n          },\n        })\n        .then((res) => {\n          if (res.data.success) {\n            toast({\n              title: \"Thành công!\",\n              message: res.data.success,\n              type: \"success\",\n            });\n            this.setState({ showCreatePlaylist: false });\n            this.props.setMyPlaylistCount(this.props.myPlaylistCount + 1);\n          }\n          if (res.data.error)\n            toast({\n              title: \"Thất bại!\",\n              message: res.data.error,\n              type: \"error\",\n            });\n        })\n        .catch((error) =>\n          toast({\n            title: \"Thất bại!\",\n            message: `${\n              error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n            }`,\n            type: \"error\",\n          })\n        );\n    }\n  };\n\n  render() {\n    if (this.state.isLoading || this.state.pageNums === null) return \"\";\n    const { myPlaylist } = this.props;\n\n    return (\n      <div className=\"section\">\n        <div className=\"heading\">\n          <div className=\"d-flex align-items-end justify-content-between\">\n            <h4 className=\"mb-0 p-2 rounded bg-light box-shadow\">\n              Playlist của bạn\n            </h4>\n            <button\n              className=\"btn btn-danger box-shadow\"\n              onClick={() => this.setState({ showCreatePlaylist: true })}\n            >\n              <FontAwesomeIcon icon={faPlusCircle} />\n              <span> Tạo mới</span>\n            </button>\n          </div>\n          <hr />\n        </div>\n        {myPlaylist.length === 0 ? (\n          <Blank />\n        ) : (\n          <React.Fragment>\n            <div className=\"row\">\n              {myPlaylist.map((playlist) => (\n                <PlaylistCard key={playlist._id} item={playlist} />\n              ))}\n            </div>\n            <MyPagination\n              pageNums={this.state.pageNums}\n              history={this.props.history}\n            />\n          </React.Fragment>\n        )}\n\n        {/* Create playlist modal */}\n        <Modal\n          show={this.state.showCreatePlaylist}\n          onHide={() => this.setState({ showCreatePlaylist: false })}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton className=\"bg-light\">\n            <h5 className=\"mb-0\">Tạo playlist mới</h5>\n          </Modal.Header>\n          <Modal.Body className=\"playlist-modal-body bg-light\">\n            <form\n              onSubmit={this.createPlaylist}\n              method=\"POST\"\n              id=\"create-playlist-form\"\n            >\n              <div className=\"d-flex\">\n                <div className=\"flex-grow-1\">\n                  <input\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Nhập tên playlist cần tạo!\"\n                    className=\"h-100 w-100 bg-light form-control\"\n                    onFocus={() =>\n                      window.removeEventListener(\"keydown\", handleKeyboardEvent)\n                    }\n                    onBlur={() =>\n                      window.addEventListener(\"keydown\", handleKeyboardEvent)\n                    }\n                  />\n                </div>\n                <button className=\"btn btn-info ml-2\">Tạo playlist</button>\n              </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  myPlaylist: state.playlist.myPlaylist,\n  user: state.user,\n  myPlaylistCount: state.playlist.myPlaylistCount,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setMyPlaylist: (playlists) => dispatch(setMyPlaylist(playlists)),\n  setMyPlaylistCount: (count) => dispatch(setMyPlaylistCount(count)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPlaylist);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Blank from \"../general/Blank\";\nimport SongCard from \"../song/SongCard\";\n\nclass History extends Component {\n  render() {\n    const { historyListen } = this.props;\n\n    return (\n      <div className=\"section\">\n        <div className=\"heading\">\n          <div className=\"d-flex align-items-end justify-content-between\">\n            <h4 className=\"mb-0 p-2 rounded bg-light box-shadow\">\n              Bài hát nghe gần đây\n            </h4>\n            <p className=\"p-2 rounded bg-light box-shadow\">\n              {historyListen.length} bài hát\n            </p>\n          </div>\n          <hr />\n        </div>\n        \n        {historyListen.length === 0 ? (\n          <Blank />\n        ) : (\n          <div className=\"row\">\n            {historyListen.map((song) => (\n              <SongCard key={song._id} item={song} />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  historyListen: state.song.historyListen,\n});\n\nexport default connect(mapStateToProps)(History);\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAreas } from \"./actions/areaAction\";\nimport { setChart, setRecommendation } from \"./actions/songAction\";\nimport axios from \"axios\";\nimport ArtistDetail from \"./components/artist/ArtistDetail\";\nimport Artists from \"./components/artist/Artists\";\nimport Player from \"./components/general/Player\";\nimport Loading from \"./components/general/Loading\";\nimport Home from \"./components/home/Home\";\nimport Header from \"./components/layout/Header\";\nimport Sidebar from \"./components/layout/Sidebar\";\nimport PlaylistDetail from \"./components/playlist/PlaylistDetail\";\nimport Playlists from \"./components/playlist/Playlists\";\nimport SongDetail from \"./components/song/SongDetail\";\nimport Songs from \"./components/song/Songs\";\nimport Login from \"./components/user/Login\";\nimport Register from \"./components/user/Register\";\nimport ForgotPassword from \"./components/user/ForgotPassword\";\nimport ResetPassword from \"./components/user/ResetPassword\";\nimport SearchResult from \"./components/search/SearchResult\";\nimport Recommendation from \"./components/user/Recommendation\";\nimport LikedSong from \"./components/user/LikedSong\";\nimport MyPlaylist from \"./components/user/MyPlaylist\";\nimport History from \"./components/user/History\";\nimport toast from \"./helpers/toast\";\nimport cronjob from \"./helpers/cronjob\";\n\nfunction PrivateRoute({ component: Component, token, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        token ? (\n          <Component key={props.history.location.search} {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { prevPath: props.location.pathname },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isLoading: true };\n  }\n\n  componentDidMount() {\n    function getArea() {\n      return axios.get(\"/area\");\n    }\n    function getChart() {\n      return axios.get(\"/song/chart\");\n    }\n\n    Promise.all([getArea(), getChart()])\n      .then((result) => {\n        this.props.setAreas(result[0].data);\n        this.props.setChart(result[1].data);\n      })\n      .then(() => this.setState({ isLoading: false }))\n      .catch((error) =>\n        toast({\n          title: \"Thất bại!\",\n          message: `${\n            error.response ? error.response.data.message : \"Có lỗi xảy ra!\"\n          }`,\n          type: \"error\",\n        })\n      );\n\n    // get recommendation every hour\n    cronjob(new Date().setMinutes(0), 3600000, this.getRecommendation);\n  }\n\n  getRecommendation = () => {\n    const { user } = this.props;\n    if (user.userToken)\n      axios\n        .get(`/user/${user.userId}/recommend`, {\n          headers: {\n            Authorization: `Bearer ${user.userToken}`,\n          },\n        })\n        .then((result) => {\n          if (result.data) this.props.setRecommendation(result.data);\n        })\n        .catch(() =>\n          toast({\n            title: \"Thất bại!\",\n            message: \"Không thể lấy gợi ý!\",\n            type: \"error\",\n          })\n        );\n  };\n\n  render() {\n    if (this.state.isLoading) return <Loading />;\n\n    const { user } = this.props;\n\n    return (\n      <Router>\n        <div className=\"wrapper\">\n          <div id=\"my-toast\"></div>\n          <Sidebar location={this.props.location} />\n          <div className=\"content\">\n            <Header />\n            <div className=\"main-content container-fruit\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/search/:type\"\n                  render={(props) => (\n                    <SearchResult\n                      key={props.history.location.search}\n                      {...props}\n                    />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/song/detail/:id\"\n                  render={(props) => (\n                    <SongDetail key={props.match.params.id} {...props} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/song/:area/:category\"\n                  render={(props) => (\n                    <Songs key={props.history.location.search} {...props} />\n                  )}\n                />\n\n                <Route\n                  exact\n                  path=\"/playlist/detail/:id\"\n                  render={(props) => (\n                    <PlaylistDetail key={props.match.params.id} {...props} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/playlist/:area\"\n                  render={(props) => (\n                    <Playlists key={props.history.location.search} {...props} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/artist/detail/:id\"\n                  render={(props) => (\n                    <ArtistDetail key={props.match.params.id} {...props} />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/artist/:area\"\n                  render={(props) => (\n                    <Artists key={props.history.location.search} {...props} />\n                  )}\n                />\n                {!user.userToken ? (\n                  <Route exact path=\"/login\" component={Login} />\n                ) : null}\n                {!user.userToken ? (\n                  <Route exact path=\"/register\" component={Register} />\n                ) : null}\n                {!user.userToken ? (\n                  <Route\n                    exact\n                    path=\"/forgot-password\"\n                    component={ForgotPassword}\n                  />\n                ) : null}\n                <Route\n                  exact\n                  path=\"/reset-password/:token\"\n                  component={ResetPassword}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/user/recommend\"\n                  token={user.userToken}\n                  component={Recommendation}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/user/liked-song\"\n                  token={user.userToken}\n                  component={LikedSong}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/user/my-playlist\"\n                  token={user.userToken}\n                  component={MyPlaylist}\n                />\n                <PrivateRoute\n                  exact\n                  path=\"/user/history\"\n                  token={user.userToken}\n                  component={History}\n                />\n                <Route exact path=\"/\" component={Home} />\n                <Route render={() => <Redirect to=\"/\" />} />\n              </Switch>\n            </div>\n            <Player />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  areas: state.area,\n  user: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setAreas: (areas) => dispatch(setAreas(areas)),\n  setChart: (songs) => dispatch(setChart(songs)),\n  setRecommendation: (songs) => dispatch(setRecommendation(songs)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export default function cronjob(execTime, intervalTime, job) {\n  const currentTime = new Date().getTime(); //get current time\n  let timeLeft;\n  if (currentTime < execTime) {\n    //currently earlier than execTime\n    timeLeft = execTime - currentTime;\n  } else {\n    //currently later than execTime, schedule for next job\n    timeLeft = execTime + intervalTime - currentTime;\n  }\n  setTimeout(() => {\n    job();\n    setInterval(() => {\n      job();\n    }, intervalTime); //repeat every intervalTime\n  }, timeLeft); //wait until execTime\n}\n","import * as types from \"../constants/ActionTypes\";\n\nexport const setAreas = (areas) => {\n  return {\n    type: types.SET_AREAS,\n    areas,\n  };\n};","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n  isPlaying: false,\n  isRandom: false,\n  repeat: \"none\",\n  volume: 1,\n  currentIndex: 0,\n  currentSongId: \"\",\n  progressPercent: 0,\n  currentTime: 0,\n  duration: 0,\n  listPlaying: [],\n};\nconst player = (state = initialState, action) => {\n  switch (action.type) {\n    case types.PLAY_AUDIO:\n      return { ...state, isPlaying: true };\n    case types.PAUSE_AUDIO:\n      return { ...state, isPlaying: false };\n    case types.SET_CURRENT_TIME:\n      return { ...state, currentTime: action.newTime };\n    case types.SET_CURRENT_SONG_ID:\n      return { ...state, currentSongId: action.currentSongId };\n    case types.SET_PROGRESS_PERCENT:\n      return { ...state, progressPercent: action.newPercent };\n    case types.SET_CURRENT_INDEX:\n      return { ...state, currentIndex: action.newIndex };\n    case types.SET_DURATION:\n      return { ...state, duration: action.newDuration };\n    case types.SET_REPEAT:\n      return { ...state, repeat: action.value };\n    case types.TOGGLE_RANDOM:\n      return { ...state, isRandom: !state.isRandom };\n    case types.SET_VOLUME:\n      return { ...state, volume: action.newVolume };\n    case types.SET_LIST_PLAYING:\n      return { ...state, listPlaying: action.listPlaying };\n    default:\n      return state;\n  }\n};\n\nexport default player;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n  playlistArea: [],\n  myPlaylist: null,\n  myPlaylistCount: null,\n  playlistDetail: {},\n};\n\nconst playlist = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_PLAYLIST_AREA:\n      return { ...state, playlistArea: action.playlists };\n    case types.SET_MY_PLAYLIST:\n      return { ...state, myPlaylist: action.playlists };\n    case types.SET_MY_PLAYLIST_COUNT:\n      return { ...state, myPlaylistCount: action.count };\n    case types.SET_PLAYLIST_DETAIL:\n      return { ...state, playlistDetail: action.playlist };\n    default:\n      return state;\n  }\n};\n\nexport default playlist;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n  songs: [],\n  songDetail: {},\n  songCategory: [],\n  historyListen: [],\n  likedSongCount: null,\n  recommendation: null,\n  chart: [],\n};\n\nconst song = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_SONGS:\n      return { ...state, songs: action.songs };\n    case types.SET_SONG_DETAIL:\n      return { ...state, songDetail: action.song };\n    case types.SET_SONG_CATEGORY:\n      return { ...state, songCategory: action.songs };\n    case types.SET_LIKED_SONG_COUNT:\n      return { ...state, likedSongCount: action.count };\n    case types.SET_HISTORY_LISTEN:\n      return { ...state, historyListen: action.songs };\n    case types.SET_RECOMMENDATION:\n      return { ...state, recommendation: action.songs };\n    case types.SET_CHART:\n      return { ...state, chart: action.songs };\n    default:\n      return state;\n  }\n};\n\nexport default song;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = [];\n\nconst area = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_AREAS:\n      state = action.areas;\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport default area;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n  userId: null,\n  username: null,\n  email: null,\n  userToken: null,\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_CURRENT_USER:\n      state = action.user;\n      return { ...state };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n  artistArea: [],\n  artistDetail: {},\n};\n\nconst artist = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_ARTIST_AREA:\n      return { ...state, artistArea: action.artists };\n    case types.SET_ARTIST_DETAIL:\n      return { ...state, artistDetail: action.artist };\n    default:\n      return state;\n  }\n};\n\nexport default artist;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n  suggestion: [],\n  result: [],\n  filterResult: [],\n};\n\nconst search = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SET_SEARCH_SUGGEST:\n      return { ...state, suggestion: action.suggestion };\n    case types.SET_SEARCH_RESULT:\n      return { ...state, result: action.result };\n    case types.SET_FILTER_RESULT:\n      return { ...state, filterResult: action.result };\n    default:\n      return state;\n  }\n};\n\nexport default search;\n","import { combineReducers } from \"redux\";\nimport player from \"./playerReducer\";\nimport playlist from \"./playlistReducer\";\nimport song from \"./songReducer\";\nimport area from \"./areaReducer\";\nimport user from \"./userReducer\";\nimport artist from \"./artistReducer\";\nimport search from \"./searchReducer\";\n\nexport default combineReducers({\n  player,\n  playlist,\n  song,\n  area,\n  user,\n  artist,\n  search,\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport { loadState, saveState } from \"./helpers/useLocalStorage\";\n\nconst persistedState = loadState();\n\nconst middleware = [thunk];\nconst devTools =\n  process.env.NODE_ENV === \"development\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n    : (func) => func;\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  compose(applyMiddleware(...middleware), devTools)\n);\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nexport default store;\n","import { LOCAL_STORAGE_KEY } from \"../constants/Config\";\n\nexport const loadState = () => {\n  try {\n    const persistedState = localStorage.getItem(LOCAL_STORAGE_KEY);\n    return JSON.parse(persistedState) || {};\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const persistedState = JSON.stringify(state);\n    localStorage.setItem(LOCAL_STORAGE_KEY, persistedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","const LOCAL_STORAGE_KEY = \"MUSICRS\";\n\nconst NUMBER_OF_ITEM_PER_PAGE = 24;\n\nmodule.exports = { LOCAL_STORAGE_KEY, NUMBER_OF_ITEM_PER_PAGE };\n"],"sourceRoot":""}